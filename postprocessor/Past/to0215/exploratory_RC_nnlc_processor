{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"exploratory_RC_nnlc_processor","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"WOkcqUr1x7Gk"},"source":["**Postprocessor about KKT residual**"]},{"cell_type":"markdown","metadata":{"id":"lhtGDVuay1aC"},"source":["# Overall preliminaries"]},{"cell_type":"code","metadata":{"id":"J_v63uV-xx0H","executionInfo":{"status":"ok","timestamp":1612857783289,"user_tz":-540,"elapsed":574,"user":{"displayName":"Mitsuaki Obara","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgTc8J_ZbYtCo4EduXT-CtVU_yA3tGcM2yJdBrd=s64","userId":"01228617048231420770"}}},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import math"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"ibRpNxX4yBfs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612857784245,"user_tz":-540,"elapsed":598,"user":{"displayName":"Mitsuaki Obara","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgTc8J_ZbYtCo4EduXT-CtVU_yA3tGcM2yJdBrd=s64","userId":"01228617048231420770"}},"outputId":"3b11c9b8-c1b7-4e7c-abc3-020c697114e1"},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","root_dir=\"/content/drive/My Drive/Codes/Seqential-quadratic-programming-on-manifold/\"\n","output_dir = \"postprocessor/exploratory_RC_nnlc/\""],"execution_count":16,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"JCHXIkSlyFbH"},"source":["# nonnegA_RC_nn processor\n"]},{"cell_type":"markdown","metadata":{"id":"wnqV7podytig"},"source":["## Preliminaries"]},{"cell_type":"code","metadata":{"id":"HWwmTO_8yErG","executionInfo":{"status":"ok","timestamp":1612857786063,"user_tz":-540,"elapsed":686,"user":{"displayName":"Mitsuaki Obara","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgTc8J_ZbYtCo4EduXT-CtVU_yA3tGcM2yJdBrd=s64","userId":"01228617048231420770"}}},"source":["rep = 1\n","dim_set = [[4,8], [5,10], [6,12], [7,14]]\n","rank_set = [2,3]\n","eqratio_set = [1, 0.7, 0.5, 0.3, 0]\n","tol = 16\n","init_tolcheckpow = -3\n","method_set = ['ALM', 'LQH', 'LSE', 'Riemannian_SQP']\n","input_dir = \"result/exploratory_RC_nnlc/\""],"execution_count":17,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"y5zj3ppxSl2X"},"source":["## ResItes, ResIter, AveTime Tables"]},{"cell_type":"code","metadata":{"id":"bNGsHgTsQAw2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612857795338,"user_tz":-540,"elapsed":6595,"user":{"displayName":"Mitsuaki Obara","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgTc8J_ZbYtCo4EduXT-CtVU_yA3tGcM2yJdBrd=s64","userId":"01228617048231420770"}},"outputId":"0d814a19-abb7-47da-91db-5106ae7c2667"},"source":["for eqratio in eqratio_set:\n","  for rank in rank_set:\n","    ave_time_output = pd.DataFrame()\n","    for dim in dim_set:\n","      time_output = pd.DataFrame()\n","      iter_output = pd.DataFrame()\n","      ave_time_in_dim = pd.DataFrame()\n","      rdim = dim[0]\n","      cdim = dim[1]\n","\n","      for method in method_set:\n","        data = pd.read_csv(root_dir + input_dir + \"RC_nn_%s_nrep%dRowdim%dColdim%dRank%dTol%dEqratio%0.1e.csv\" %(method, rep, rdim, cdim, rank, tol, eqratio))\n","        cols = data[['KKT_residual', 'time', 'iter']].copy()\n","        cols.name = method\n","        \n","        tolcheckpow = init_tolcheckpow\n","        time = []\n","        iter = []\n","\n","        ncol = cols.shape[0]\n","        while True:\n","          flag = False\n","          for i in range(ncol):\n","            if (data['KKT_residual'][i] < pow(10, -tolcheckpow)):\n","              time += [data['time'][i]]\n","              iter += [data['iter'][i]]\n","              tolcheckpow += 1\n","              flag = True\n","              break\n","          if not flag:\n","            break\n","\n","        time_outputcol = pd.Series(data = np.array(time), name = method)\n","        time_output = pd.concat([time_output, time_outputcol], axis = 1)\n","        iter_outputcol = pd.Series(data = np.array(iter), name = method)\n","        iter_output = pd.concat([iter_output, iter_outputcol], axis = 1)\n","\n","        total_time = data['time'][-1:].values[0]\n","        total_iter_num = data['time'][-1:].index[0]\n","        ave_time = total_time / total_iter_num\n","        #print(ave_time)\n","        ave_time_in_dim.insert(len(ave_time_in_dim.columns), method, [ave_time])\n","        #print(ave_time_in_dim)\n","\n","        # ave_time_output = pd.concat([ave_time_output, ave_time_outputcol], axis = 1)\n","      \n","      ave_time_in_dim[\"dim\"] = str(dim)\n","      ave_time_output = pd.concat([ave_time_output, ave_time_in_dim], axis = 0)\n","      time_fintotal_checkpow = time_output.shape[0] + init_tolcheckpow\n","      time_output[\"log10residual\"] = pd.RangeIndex(start = init_tolcheckpow, stop = time_fintotal_checkpow)\n","      iter_fintotal_checkpow = iter_output.shape[0] + init_tolcheckpow\n","      iter_output[\"log10residual\"] = pd.RangeIndex(start = init_tolcheckpow, stop = iter_fintotal_checkpow)\n","\n","      print(time_output)\n","      time_output.to_csv(root_dir + output_dir + \"exploratory_RC_nnlc_ResTimeTable_nrep%dRowdim%dColdim%dRank%dTol%dEqratio%0.1e.csv\" %(rep, rdim, cdim, rank, tol, eqratio))\n","      print(iter_output)\n","      iter_output.to_csv(root_dir + output_dir + \"exploratory_RC_nn_ResIterTable_nrep%dRowdim%dColdim%dRank%dTol%dEqratio%0.1e.csv\" %(rep, rdim, cdim, rank, tol, eqratio))\n","\n","    print(ave_time_output)\n","    ave_time_output.to_csv(root_dir + output_dir + \"exploratory_RC_nn_WholeAveTimeTable_nrep%dRank%dTol%dEqratio%0.1e.csv\" %(rep, rank, tol, eqratio))"],"execution_count":18,"outputs":[{"output_type":"stream","text":["       ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0   0.0000  0.00000  0.00000        0.000165             -3\n","1   0.0000  0.00000  0.00000        0.000165             -2\n","2   0.0000  0.00000  0.00000        0.000165             -1\n","3   2.1554  0.00000  0.00000        0.236650              0\n","4      NaN  0.00000  0.27020        0.236650              1\n","5      NaN  0.00000  0.36388        0.236650              2\n","6      NaN  0.00000  0.43681        0.236650              3\n","7      NaN  0.00000  0.51439        0.236650              4\n","8      NaN  0.00000  0.56182        0.350510              5\n","9      NaN  0.00000  0.65445        0.443700              6\n","10     NaN  0.80138  1.39750       12.668100              7\n","11     NaN  0.91964      NaN       15.997700              8\n","12     NaN  5.01390      NaN       31.427900              9\n","    ALM  LQH   LSE  Riemannian_SQP  log10residual\n","0   0.0    0   0.0               0             -3\n","1   0.0    0   0.0               0             -2\n","2   0.0    0   0.0               0             -1\n","3   2.0    0   0.0               1              0\n","4   NaN    0   1.0               1              1\n","5   NaN    0   2.0               1              2\n","6   NaN    0   3.0               1              3\n","7   NaN    0   4.0               1              4\n","8   NaN    0   5.0               2              5\n","9   NaN    0   8.0               3              6\n","10  NaN   41  39.0             164              7\n","11  NaN   46   NaN             221              8\n","12  NaN  220   NaN             481              9\n","        ALM      LQH     LSE  Riemannian_SQP  log10residual\n","0    0.0000  0.00000  0.0000         0.00003             -3\n","1    0.0000  0.00000  0.0000         0.00003             -2\n","2    0.0000  0.00000  0.0000         0.00003             -1\n","3    2.3975  0.00000  1.3691             NaN              0\n","4    6.7025  0.78430     NaN             NaN              1\n","5    9.9192  0.78430     NaN             NaN              2\n","6   10.2274  0.89174     NaN             NaN              3\n","7   10.5003  1.07060     NaN             NaN              4\n","8   10.7625  1.18920     NaN             NaN              5\n","9   10.9538  1.33120     NaN             NaN              6\n","10  11.1362  6.57250     NaN             NaN              7\n","    ALM  LQH  LSE  Riemannian_SQP  log10residual\n","0     0    0  0.0             0.0             -3\n","1     0    0  0.0             0.0             -2\n","2     0    0  0.0             0.0             -1\n","3     2    0  1.0             NaN              0\n","4     5    1  NaN             NaN              1\n","5     8    1  NaN             NaN              2\n","6     9    2  NaN             NaN              3\n","7    10    4  NaN             NaN              4\n","8    11    6  NaN             NaN              5\n","9    12    8  NaN             NaN              6\n","10   13  180  NaN             NaN              7\n","      ALM      LQH     LSE  Riemannian_SQP  log10residual\n","0  0.0000  0.00000  0.0000        0.000031             -3\n","1  0.0000  0.00000  0.0000        0.000031             -2\n","2  0.0000  0.00000  0.0000        0.000031             -1\n","3  2.8368  0.00000  0.0000             NaN              0\n","4  9.8174  0.00000  3.7621             NaN              1\n","5     NaN  0.14849     NaN             NaN              2\n","   ALM  LQH  LSE  Riemannian_SQP  log10residual\n","0  0.0    0  0.0             0.0             -3\n","1  0.0    0  0.0             0.0             -2\n","2  0.0    0  0.0             0.0             -1\n","3  2.0    0  0.0             NaN              0\n","4  6.0    0  2.0             NaN              1\n","5  NaN    1  NaN             NaN              2\n","      ALM  LQH     LSE  Riemannian_SQP  log10residual\n","0  0.0000  0.0  0.0000        0.000031             -3\n","1  0.0000  0.0  0.0000        0.000031             -2\n","2  0.0000  0.0  0.0000        0.000031             -1\n","3  3.8119  0.0  1.8837             NaN              0\n","   ALM  LQH  LSE  Riemannian_SQP  log10residual\n","0    0    0    0             0.0             -3\n","1    0    0    0             0.0             -2\n","2    0    0    0             0.0             -1\n","3    3    0    1             NaN              0\n","        ALM       LQH       LSE  Riemannian_SQP      dim\n","0  0.528625  0.023300  0.033152        0.059500   [4, 8]\n","0  0.511054  0.034637  0.336209        0.544683  [5, 10]\n","0  0.542666  0.390543  1.452457        0.491435  [6, 12]\n","0  0.565552  0.093870  0.511900        0.983529  [7, 14]\n","       ALM       LQH      LSE  Riemannian_SQP  log10residual\n","0   0.0000  0.000000  0.00000        0.000036             -3\n","1   0.0000  0.000000  0.00000        0.000036             -2\n","2   0.0000  0.000000  0.00000        0.000036             -1\n","3   1.3183  0.000000  0.00000             NaN              0\n","4   2.4466  0.000000  0.47616             NaN              1\n","5   3.7038  0.056322  0.54424             NaN              2\n","6   3.8880  0.361890  1.19240             NaN              3\n","7   4.0066  0.361890  1.28520             NaN              4\n","8   4.1246  0.401100  1.28520             NaN              5\n","9   4.1691  0.506950  1.41120             NaN              6\n","10  4.3754  0.547470  1.45500             NaN              7\n","    ALM  LQH  LSE  Riemannian_SQP  log10residual\n","0     0    0    0             0.0             -3\n","1     0    0    0             0.0             -2\n","2     0    0    0             0.0             -1\n","3     2    0    0             NaN              0\n","4     4    0    1             NaN              1\n","5     6    1    2             NaN              2\n","6     7    3    4             NaN              3\n","7     8    3    5             NaN              4\n","8     9    6    5             NaN              5\n","9    10    8    8             NaN              6\n","10   13   11   11             NaN              7\n","      ALM      LQH     LSE  Riemannian_SQP  log10residual\n","0  0.0000  0.00000  0.0000        0.000032             -3\n","1  0.0000  0.00000  0.0000        0.000032             -2\n","2  0.0000  0.00000  0.0000        0.000032             -1\n","3  2.7040  0.00000  0.0000             NaN              0\n","4  5.4064  0.24284  1.5132             NaN              1\n","   ALM  LQH  LSE  Riemannian_SQP  log10residual\n","0    0    0    0             0.0             -3\n","1    0    0    0             0.0             -2\n","2    0    0    0             0.0             -1\n","3    2    0    0             NaN              0\n","4    4    1    1             NaN              1\n","       ALM  LQH     LSE  Riemannian_SQP  log10residual\n","0   0.0000  0.0  0.0000        0.000031             -3\n","1   0.0000  0.0  0.0000        0.000031             -2\n","2   0.0000  0.0  0.0000        0.000031             -1\n","3   3.0814  0.0  2.1340             NaN              0\n","4  11.4944  NaN  6.6688             NaN              1\n","   ALM  LQH  LSE  Riemannian_SQP  log10residual\n","0    0  0.0    0             0.0             -3\n","1    0  0.0    0             0.0             -2\n","2    0  0.0    0             0.0             -1\n","3    2  0.0    1             NaN              0\n","4    7  NaN    3             NaN              1\n","        ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000  0.00000   0.0000         0.00003             -3\n","1    0.0000  0.00000   0.0000         0.00003             -2\n","2    0.0000  0.00000   0.0000         0.00003             -1\n","3    3.1630  0.00000   1.1384             NaN              0\n","4   11.5557  0.37444   1.1384             NaN              1\n","5   21.7561      NaN   2.4128             NaN              2\n","6   25.7881      NaN   4.2498             NaN              3\n","7   27.8324      NaN   4.7273             NaN              4\n","8   27.8324      NaN   4.8075             NaN              5\n","9   30.4023      NaN   5.3784             NaN              6\n","10      NaN      NaN  35.5554             NaN              7\n","     ALM  LQH  LSE  Riemannian_SQP  log10residual\n","0    0.0  0.0    0             0.0             -3\n","1    0.0  0.0    0             0.0             -2\n","2    0.0  0.0    0             0.0             -1\n","3    2.0  0.0    1             NaN              0\n","4    6.0  1.0    1             NaN              1\n","5   11.0  NaN    2             NaN              2\n","6   13.0  NaN    4             NaN              3\n","7   14.0  NaN    5             NaN              4\n","8   14.0  NaN    6             NaN              5\n","9   17.0  NaN    8             NaN              6\n","10   NaN  NaN  492             NaN              7\n","        ALM       LQH       LSE  Riemannian_SQP      dim\n","0  0.502433  0.026067  0.029267        0.258695   [4, 8]\n","0  0.544759  0.239476  0.644320        0.655619  [5, 10]\n","0  0.564543  0.260399  2.008084        0.692105  [6, 12]\n","0  0.544172  0.144585  0.069092        0.868184  [7, 14]\n","        ALM       LQH       LSE  Riemannian_SQP  log10residual\n","0    0.0000   0.00000    0.0000        0.000069             -3\n","1    0.0000   0.00000    0.0000        0.000069             -2\n","2    0.0000   0.00000    0.0000        0.000069             -1\n","3    1.9032   0.00000    1.3280        0.082894              0\n","4    2.0747   0.20818    1.3280        0.437290              1\n","5    2.1435   0.45328    3.0807        1.105800              2\n","6   11.4451   4.61270    3.7146        1.168400              3\n","7       NaN   7.22480  168.7822        1.227600              4\n","8       NaN  15.46180  168.8591        1.348400              5\n","9       NaN       NaN  169.6515        1.722000              6\n","10      NaN       NaN       NaN        2.713900              7\n","11      NaN       NaN       NaN        5.731300              8\n","12      NaN       NaN       NaN       28.378100              9\n","     ALM    LQH     LSE  Riemannian_SQP  log10residual\n","0    0.0    0.0     0.0               0             -3\n","1    0.0    0.0     0.0               0             -2\n","2    0.0    0.0     0.0               0             -1\n","3    2.0    0.0     1.0               1              0\n","4    4.0    1.0     1.0               6              1\n","5    5.0    4.0     3.0              16              2\n","6   13.0   10.0     5.0              17              3\n","7    NaN   16.0  2294.0              18              4\n","8    NaN  322.0  2297.0              20              5\n","9    NaN    NaN  2327.0              26              6\n","10   NaN    NaN     NaN              42              7\n","11   NaN    NaN     NaN              92              8\n","12   NaN    NaN     NaN             449              9\n","        ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000  0.00000  0.00000        0.000031             -3\n","1    0.0000  0.00000  0.00000        0.000031             -2\n","2    0.0000  0.00000  0.00000        0.000031             -1\n","3    1.2801  0.29494  0.22538        0.344720              0\n","4    2.6899  0.29494  0.22538        0.558140              1\n","5    7.6642  0.29494  1.31270        0.664020              2\n","6    8.0086  0.29494  2.34360        0.772910              3\n","7    8.6087  0.38003  2.87500        0.772910              4\n","8    9.4862  0.43544  2.87500        0.882950              5\n","9   10.3698  0.52138  3.02400        0.882950              6\n","10  10.6596      NaN  3.61510        0.882950              7\n","    ALM  LQH  LSE  Riemannian_SQP  log10residual\n","0     0  0.0    0               0             -3\n","1     0  0.0    0               0             -2\n","2     0  0.0    0               0             -1\n","3     2  1.0    1               3              0\n","4     4  1.0    1               5              1\n","5    10  1.0    4               6              2\n","6    11  1.0    6               7              3\n","7    13  4.0    7               7              4\n","8    16  6.0    7               8              5\n","9    20  8.0    8               8              6\n","10   23  NaN   10               8              7\n","      ALM      LQH     LSE  Riemannian_SQP  log10residual\n","0  0.0000  0.00000  0.0000        0.000031             -3\n","1  0.0000  0.00000  0.0000        0.000031             -2\n","2  0.0000  0.00000  0.0000        0.000031             -1\n","3  2.7807  0.00000  2.0949             NaN              0\n","4  6.8208  0.18595  4.1164             NaN              1\n","   ALM  LQH  LSE  Riemannian_SQP  log10residual\n","0    0    0    0             0.0             -3\n","1    0    0    0             0.0             -2\n","2    0    0    0             0.0             -1\n","3    2    0    1             NaN              0\n","4    5    1    2             NaN              1\n","        ALM       LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000   0.00000   0.0000        0.000031             -3\n","1    0.0000   0.00000   0.0000        0.000031             -2\n","2    0.0000   0.00000   0.0000        0.000031             -1\n","3    2.9504   0.00000   0.0000        0.324360              0\n","4    8.3527   0.80465   2.4044        1.048600              1\n","5   13.7867   9.65750  12.3075        4.345000              2\n","6   27.9426  24.95740  42.2860        4.977200              3\n","7   36.4356  62.90170  96.4314        6.986200              4\n","8   44.8635       NaN      NaN       12.487500              5\n","9   55.1972       NaN      NaN       19.586500              6\n","10      NaN       NaN      NaN       26.600300              7\n","11      NaN       NaN      NaN       33.556900              8\n","12      NaN       NaN      NaN       40.917400              9\n","     ALM    LQH    LSE  Riemannian_SQP  log10residual\n","0    0.0    0.0    0.0               0             -3\n","1    0.0    0.0    0.0               0             -2\n","2    0.0    0.0    0.0               0             -1\n","3    2.0    0.0    0.0               1              0\n","4    5.0    1.0    1.0               3              1\n","5    8.0    8.0    5.0              13              2\n","6   16.0   17.0   17.0              15              3\n","7   21.0  265.0  260.0              21              4\n","8   26.0    NaN    NaN              38              5\n","9   32.0    NaN    NaN              60              6\n","10   NaN    NaN    NaN              82              7\n","11   NaN    NaN    NaN             104              8\n","12   NaN    NaN    NaN             127              9\n","        ALM       LQH       LSE  Riemannian_SQP      dim\n","0  0.517131  0.028778  0.066735        0.062702   [4, 8]\n","0  0.491749  0.027093  0.035748        0.109491  [5, 10]\n","0  0.562324  0.276501  0.470342        2.495381  [6, 12]\n","0  0.503154  0.090986  0.135219        0.323302  [7, 14]\n","        ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000  0.00000   0.0000        0.000030             -3\n","1    0.0000  0.00000   0.0000        0.000030             -2\n","2    0.0000  0.00000   0.0000        0.000030             -1\n","3    1.9600  0.11623   1.3998        0.080304              0\n","4    3.6468  0.11623   1.3998        0.250080              1\n","5    6.0244  0.11623   2.7257        0.914360              2\n","6    7.2918  0.81467   4.3407        1.076400              3\n","7   13.1191  1.96190  21.3082        1.154800              4\n","8   25.8517  2.54860  21.3082        1.154800              5\n","9   25.8517      NaN      NaN        1.234200              6\n","10      NaN      NaN      NaN        1.234200              7\n","11      NaN      NaN      NaN        2.537200              8\n","12      NaN      NaN      NaN       28.294700              9\n","13      NaN      NaN      NaN      145.732100             10\n","     ALM   LQH   LSE  Riemannian_SQP  log10residual\n","0    0.0   0.0   0.0               0             -3\n","1    0.0   0.0   0.0               0             -2\n","2    0.0   0.0   0.0               0             -1\n","3    2.0   1.0   1.0               1              0\n","4    4.0   1.0   1.0               3              1\n","5    6.0   1.0   3.0              11              2\n","6    8.0   6.0   5.0              13              3\n","7   13.0  12.0  18.0              14              4\n","8   24.0  18.0  18.0              14              5\n","9   24.0   NaN   NaN              15              6\n","10   NaN   NaN   NaN              15              7\n","11   NaN   NaN   NaN              30              8\n","12   NaN   NaN   NaN             325              9\n","13   NaN   NaN   NaN            1724             10\n","        ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000  0.00000   0.0000        0.000035             -3\n","1    0.0000  0.00000   0.0000        0.000035             -2\n","2    0.0000  0.00000   0.0000        0.000035             -1\n","3    2.2782  0.48662   1.8678        0.176870              0\n","4    5.3303  0.48662   1.8678        0.705560              1\n","5    6.1693  0.48662   2.8877        1.945700              2\n","6   15.2369  2.39340   6.9088        2.475300              3\n","7       NaN  2.39340  14.0531       13.638700              4\n","8       NaN  2.39340  22.8990       13.804700              5\n","9       NaN  2.48680      NaN       13.804700              6\n","10      NaN      NaN      NaN       13.974500              7\n","11      NaN      NaN      NaN       25.650400              8\n","12      NaN      NaN      NaN      170.895800              9\n","     ALM  LQH   LSE  Riemannian_SQP  log10residual\n","0    0.0  0.0   0.0               0             -3\n","1    0.0  0.0   0.0               0             -2\n","2    0.0  0.0   0.0               0             -1\n","3    2.0  1.0   1.0               1              0\n","4    4.0  1.0   1.0               4              1\n","5    5.0  1.0   2.0              11              2\n","6   11.0  6.0   5.0              14              3\n","7    NaN  6.0   9.0              69              4\n","8    NaN  6.0  14.0              70              5\n","9    NaN  8.0   NaN              70              6\n","10   NaN  NaN   NaN              71              7\n","11   NaN  NaN   NaN             138              8\n","12   NaN  NaN   NaN             978              9\n","        ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000   0.0000   0.0000        0.000032             -3\n","1    0.0000   0.0000   0.0000        0.000032             -2\n","2    0.0000   0.0000   0.0000        0.000032             -1\n","3    3.1764   0.0000   2.0858        0.311020              0\n","4    8.6772   1.4974   2.0858        1.877900              1\n","5   17.3766   1.4974   3.1762        3.143000              2\n","6   20.8220  14.0315  17.3337        3.449100              3\n","7   38.2268  39.1198  45.0424        3.752700              4\n","8       NaN      NaN      NaN        4.060600              5\n","9       NaN      NaN      NaN        4.060600              6\n","10      NaN      NaN      NaN        4.060600              7\n","11      NaN      NaN      NaN        4.370600              8\n","12      NaN      NaN      NaN       80.208400              9\n","     ALM   LQH   LSE  Riemannian_SQP  log10residual\n","0    0.0   0.0   0.0               0             -3\n","1    0.0   0.0   0.0               0             -2\n","2    0.0   0.0   0.0               0             -1\n","3    2.0   0.0   1.0               1              0\n","4    5.0   1.0   1.0               6              1\n","5   10.0   1.0   2.0              10              2\n","6   12.0  10.0   9.0              11              3\n","7   23.0  50.0  23.0              12              4\n","8    NaN   NaN   NaN              13              5\n","9    NaN   NaN   NaN              13              6\n","10   NaN   NaN   NaN              13              7\n","11   NaN   NaN   NaN              14              8\n","12   NaN   NaN   NaN             265              9\n","        ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000   0.0000   0.0000         0.00003             -3\n","1    0.0000   0.0000   0.0000         0.00003             -2\n","2    0.0000   0.0000   0.0000         0.00003             -1\n","3    2.9677   0.0000   0.0000         0.46897              0\n","4    6.3479   1.4657   2.3317         2.26650              1\n","5   11.7284   1.4657   9.7372        15.95730              2\n","6   15.2862   4.2617  26.8987        21.13930              3\n","7   42.7664  15.3873      NaN        29.08040              4\n","8       NaN      NaN      NaN        40.35730              5\n","9       NaN      NaN      NaN        44.88060              6\n","10      NaN      NaN      NaN        48.14080              7\n","11      NaN      NaN      NaN        52.09920              8\n","     ALM   LQH   LSE  Riemannian_SQP  log10residual\n","0    0.0   0.0   0.0               0             -3\n","1    0.0   0.0   0.0               0             -2\n","2    0.0   0.0   0.0               0             -1\n","3    2.0   0.0   0.0               1              0\n","4    4.0   1.0   1.0               5              1\n","5    7.0   1.0   4.0              34              2\n","6    9.0   3.0  11.0              45              3\n","7   26.0  10.0   NaN              62              4\n","8    NaN   NaN   NaN              86              5\n","9    NaN   NaN   NaN              96              6\n","10   NaN   NaN   NaN             103              7\n","11   NaN   NaN   NaN             112              8\n","        ALM       LQH       LSE  Riemannian_SQP      dim\n","0  0.476359  0.023965  0.030052        0.084720   [4, 8]\n","0  0.508118  0.031371  0.044030        0.174528  [5, 10]\n","0  0.519367  0.069937  0.117287        0.303234  [6, 12]\n","0  0.528638  0.051363  0.295712        0.457143  [7, 14]\n","       ALM      LQH     LSE  Riemannian_SQP  log10residual\n","0   0.0000  0.00000  0.0000        0.000069             -3\n","1   0.0000  0.00000  0.0000        0.000069             -2\n","2   0.0000  0.00000  0.0000        0.000069             -1\n","3   1.7295  0.00000  1.3842        0.067753              0\n","4   2.8427  0.12394  1.3842        0.287970              1\n","5   2.9100  0.12394  2.2536        0.361040              2\n","6   3.0378  0.12394  2.9981        0.433570              3\n","7   3.4182  0.14164  3.9299        0.505570              4\n","8   3.8635  0.26524  3.9299        0.505570              5\n","9   4.3260  0.35857  4.4744        0.577670              6\n","10  4.6805      NaN     NaN        0.577670              7\n","11     NaN      NaN     NaN        0.577670              8\n","12     NaN      NaN     NaN        0.577670              9\n","13     NaN      NaN     NaN      141.929400             10\n","     ALM  LQH  LSE  Riemannian_SQP  log10residual\n","0    0.0  0.0  0.0               0             -3\n","1    0.0  0.0  0.0               0             -2\n","2    0.0  0.0  0.0               0             -1\n","3    2.0  0.0  1.0               1              0\n","4    4.0  1.0  1.0               4              1\n","5    5.0  1.0  4.0               5              2\n","6    7.0  1.0  6.0               6              3\n","7   13.0  3.0  8.0               7              4\n","8   20.0  6.0  8.0               7              5\n","9   28.0  8.0  9.0               8              6\n","10  36.0  NaN  NaN               8              7\n","11   NaN  NaN  NaN               8              8\n","12   NaN  NaN  NaN               8              9\n","13   NaN  NaN  NaN            2388             10\n","        ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000   0.0000   0.0000        0.000031             -3\n","1    0.0000   0.0000   0.0000        0.000031             -2\n","2    0.0000   0.0000   0.0000        0.000031             -1\n","3    2.3085   1.3102   1.5411        0.120680              0\n","4    4.5757   1.3102   1.5411        0.619680              1\n","5    9.9841   1.3102  14.4217        1.344100              2\n","6   16.4242   7.6003      NaN        1.476500              3\n","7       NaN  15.3584      NaN        1.962400              4\n","8       NaN  43.2484      NaN        2.073400              5\n","9       NaN      NaN      NaN        2.339400              6\n","10      NaN      NaN      NaN        2.477000              7\n","11      NaN      NaN      NaN        2.718200              8\n","     ALM    LQH  LSE  Riemannian_SQP  log10residual\n","0    0.0    0.0  0.0               0             -3\n","1    0.0    0.0  0.0               0             -2\n","2    0.0    0.0  0.0               0             -1\n","3    2.0    1.0  1.0               1              0\n","4    4.0    1.0  1.0               5              1\n","5    8.0    1.0  9.0              11              2\n","6   13.0    8.0  NaN              12              3\n","7    NaN   14.0  NaN              16              4\n","8    NaN  825.0  NaN              17              5\n","9    NaN    NaN  NaN              19              6\n","10   NaN    NaN  NaN              20              7\n","11   NaN    NaN  NaN              22              8\n","        ALM     LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000  0.0000   0.0000        0.000031             -3\n","1    0.0000  0.0000   0.0000        0.000031             -2\n","2    0.0000  0.0000   0.0000        0.000031             -1\n","3    2.3591  0.0000   1.8685        0.217280              0\n","4    6.1107  0.9688   1.8685        1.504100              1\n","5    7.6575  0.9688  10.0418        3.463300              2\n","6    9.1190  0.9688  24.4993        4.148000              3\n","7   22.9628  1.5514      NaN        4.377400              4\n","8   30.2522  2.2423      NaN        4.608900              5\n","9       NaN  3.4089      NaN        4.796300              6\n","10      NaN     NaN      NaN        4.796300              7\n","11      NaN     NaN      NaN       21.384200              8\n","12      NaN     NaN      NaN       47.541300              9\n","     ALM  LQH   LSE  Riemannian_SQP  log10residual\n","0    0.0  0.0   0.0               0             -3\n","1    0.0  0.0   0.0               0             -2\n","2    0.0  0.0   0.0               0             -1\n","3    2.0  0.0   1.0               1              0\n","4    5.0  1.0   1.0               7              1\n","5    6.0  1.0   5.0              16              2\n","6    7.0  1.0  12.0              19              3\n","7   17.0  4.0   NaN              20              4\n","8   23.0  6.0   NaN              21              5\n","9    NaN  8.0   NaN              22              6\n","10   NaN  NaN   NaN              22              7\n","11   NaN  NaN   NaN              97              8\n","12   NaN  NaN   NaN             206              9\n","       ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0   0.0000  0.00000   0.0000        0.000032             -3\n","1   0.0000  0.00000   0.0000        0.000032             -2\n","2   0.0000  0.00000   0.0000        0.000032             -1\n","3   3.1053  0.00000   2.5221        0.325860              0\n","4   6.0916  0.53849   4.9828        0.907610              1\n","5  11.9666      NaN  14.1739        5.987600              2\n","6  13.4725      NaN  30.8033        8.489600              3\n","7  20.9924      NaN  65.6086       12.665800              4\n","8      NaN      NaN      NaN       20.243800              5\n","    ALM  LQH   LSE  Riemannian_SQP  log10residual\n","0   0.0  0.0   0.0               0             -3\n","1   0.0  0.0   0.0               0             -2\n","2   0.0  0.0   0.0               0             -1\n","3   2.0  0.0   1.0               1              0\n","4   4.0  1.0   2.0               3              1\n","5   8.0  NaN   6.0              19              2\n","6   9.0  NaN  13.0              27              3\n","7  14.0  NaN  30.0              41              4\n","8   NaN  NaN   NaN              66              5\n","        ALM       LQH       LSE  Riemannian_SQP      dim\n","0  0.448950  0.020445  0.025504        0.059162   [4, 8]\n","0  0.500648  0.030663  0.167566        0.120595  [5, 10]\n","0  0.514128  0.032464  0.150311        0.221330  [6, 12]\n","0  0.525745  0.223391  0.111616        0.302672  [7, 14]\n","       ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0   0.0000  0.00000  0.00000        0.000029             -3\n","1   0.0000  0.00000  0.00000        0.000029             -2\n","2   0.0000  0.00000  0.00000        0.000029             -1\n","3   1.8630  0.25479  0.40470        0.086718              0\n","4   2.2877  0.25479  0.40470        0.169480              1\n","5   2.3466  0.25479  0.47192        0.351900              2\n","6   2.4563  0.25479  1.52450        0.455270              3\n","7   2.6455  0.35528  1.57860        0.535480              4\n","8   2.9060  0.40530  2.92610        0.623690              5\n","9   3.1427  0.68564  2.92610        0.706660              6\n","10  3.2935      NaN  3.25640        0.803090              7\n","11  3.3648      NaN      NaN        0.886050              8\n","12     NaN      NaN      NaN        0.974260              9\n","13     NaN      NaN      NaN        1.064600             10\n","14     NaN      NaN      NaN        1.152600             11\n","15     NaN      NaN      NaN        1.239000             12\n","     ALM   LQH   LSE  Riemannian_SQP  log10residual\n","0    0.0   0.0   0.0               0             -3\n","1    0.0   0.0   0.0               0             -2\n","2    0.0   0.0   0.0               0             -1\n","3    2.0   1.0   1.0               1              0\n","4    4.0   1.0   1.0               2              1\n","5    5.0   1.0   2.0               4              2\n","6    7.0   1.0   4.0               5              3\n","7   10.0   4.0   5.0               6              4\n","8   14.0   6.0   8.0               7              5\n","9   18.0  12.0   8.0               8              6\n","10  22.0   NaN  23.0               9              7\n","11  26.0   NaN   NaN              10              8\n","12   NaN   NaN   NaN              11              9\n","13   NaN   NaN   NaN              12             10\n","14   NaN   NaN   NaN              13             11\n","15   NaN   NaN   NaN              14             12\n","        ALM       LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000   0.00000  0.00000        0.000032             -3\n","1    0.0000   0.00000  0.00000        0.000032             -2\n","2    0.0000   0.00000  0.00000        0.000032             -1\n","3    1.8258   0.00000  0.92872        0.179110              0\n","4    4.7984   0.20241  0.92872        1.036300              1\n","5    7.6947   0.20241  3.14040        2.052000              2\n","6   16.2805   2.02310  4.82430        2.410600              3\n","7   17.0014   8.10720  5.75280        2.410600              4\n","8   17.6075  18.03160  6.28520        2.589000              5\n","9   18.2577       NaN  6.92170        2.769600              6\n","10  18.5247       NaN      NaN        2.769600              7\n","11      NaN       NaN      NaN       10.148200              8\n","12      NaN       NaN      NaN       53.432500              9\n","     ALM    LQH  LSE  Riemannian_SQP  log10residual\n","0    0.0    0.0  0.0               0             -3\n","1    0.0    0.0  0.0               0             -2\n","2    0.0    0.0  0.0               0             -1\n","3    2.0    0.0  1.0               1              0\n","4    4.0    1.0  1.0               6              1\n","5    6.0    1.0  3.0              12              2\n","6   12.0    6.0  4.0              14              3\n","7   13.0   12.0  5.0              14              4\n","8   14.0  252.0  6.0              15              5\n","9   15.0    NaN  8.0              16              6\n","10  16.0    NaN  NaN              16              7\n","11   NaN    NaN  NaN              58              8\n","12   NaN    NaN  NaN             310              9\n","        ALM      LQH       LSE  Riemannian_SQP  log10residual\n","0    0.0000   0.0000   0.00000        0.000034             -3\n","1    0.0000   0.0000   0.00000        0.000034             -2\n","2    0.0000   0.0000   0.00000        0.000034             -1\n","3    2.6133   1.5176   0.91697        0.650430              0\n","4    5.3651   1.5176   0.91697        3.097800              1\n","5    8.1510   1.5176   3.09130        7.050800              2\n","6   12.7287   7.2983  11.07490        7.694300              3\n","7       NaN  17.2849  17.14420        8.332300              4\n","8       NaN  22.1583  25.29650        8.332300              5\n","9       NaN      NaN       NaN        8.332300              6\n","10      NaN      NaN       NaN        8.629700              7\n","11      NaN      NaN       NaN        8.629700              8\n","    ALM   LQH   LSE  Riemannian_SQP  log10residual\n","0   0.0   0.0   0.0               0             -3\n","1   0.0   0.0   0.0               0             -2\n","2   0.0   0.0   0.0               0             -1\n","3   2.0   1.0   1.0               2              0\n","4   4.0   1.0   1.0              10              1\n","5   6.0   1.0   3.0              23              2\n","6   9.0   5.0   7.0              25              3\n","7   NaN  12.0  10.0              27              4\n","8   NaN  18.0  17.0              27              5\n","9   NaN   NaN   NaN              27              6\n","10  NaN   NaN   NaN              28              7\n","11  NaN   NaN   NaN              28              8\n","        ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000   0.0000   0.0000        0.000032             -3\n","1    0.0000   0.0000   0.0000        0.000032             -2\n","2    0.0000   0.0000   0.0000        0.000032             -1\n","3    3.1242   1.7415   2.3703        0.870140              0\n","4    6.5067   1.7415   2.3703        3.128900              1\n","5   14.8750   2.9645  17.5165        4.456200              2\n","6       NaN  21.0947  73.2489        5.811600              3\n","7       NaN  46.0502      NaN        5.811600              4\n","8       NaN      NaN      NaN        6.272600              5\n","9       NaN      NaN      NaN        6.272600              6\n","10      NaN      NaN      NaN        6.272600              7\n","11      NaN      NaN      NaN       12.963600              8\n","    ALM    LQH   LSE  Riemannian_SQP  log10residual\n","0   0.0    0.0   0.0               0             -3\n","1   0.0    0.0   0.0               0             -2\n","2   0.0    0.0   0.0               0             -1\n","3   2.0    1.0   1.0               2              0\n","4   4.0    1.0   1.0               7              1\n","5   9.0    2.0   7.0              10              2\n","6   NaN   13.0  30.0              13              3\n","7   NaN  114.0   NaN              13              4\n","8   NaN    NaN   NaN              14              5\n","9   NaN    NaN   NaN              14              6\n","10  NaN    NaN   NaN              14              7\n","11  NaN    NaN   NaN              29              8\n","        ALM       LQH       LSE  Riemannian_SQP      dim\n","0  0.455414  0.022784  0.026755        0.086219   [4, 8]\n","0  0.476111  0.030317  0.036661        0.171892  [5, 10]\n","0  0.514387  0.041792  0.053764        0.297318  [6, 12]\n","0  0.516469  0.062232  0.418419        0.436990  [7, 14]\n","       ALM       LQH     LSE  Riemannian_SQP  log10residual\n","0   0.0000   0.00000  0.0000        0.000064             -3\n","1   0.0000   0.00000  0.0000        0.000064             -2\n","2   0.0000   0.00000  0.0000        0.000064             -1\n","3   1.5535   0.38480  1.2853        0.075067              0\n","4   3.4793   0.38480  1.2853        0.374870              1\n","5   5.1806   0.38480  5.6011        1.443200              2\n","6   5.4858   0.38480  5.6011        1.443200              3\n","7   5.7888   0.47433  5.7712        1.561700              4\n","8   6.2335   0.55442  5.7712        1.561700              5\n","9   6.5289   0.70045  5.9325        1.619500              6\n","10  6.7341  96.47930     NaN        1.680400              7\n","11     NaN       NaN     NaN        3.082700              8\n","12     NaN       NaN     NaN        3.082700              9\n","     ALM     LQH  LSE  Riemannian_SQP  log10residual\n","0    0.0     0.0  0.0               0             -3\n","1    0.0     0.0  0.0               0             -2\n","2    0.0     0.0  0.0               0             -1\n","3    2.0     1.0  1.0               1              0\n","4    4.0     1.0  1.0               5              1\n","5    7.0     1.0  5.0              22              2\n","6    9.0     1.0  5.0              22              3\n","7   11.0     4.0  6.0              24              4\n","8   14.0     6.0  6.0              24              5\n","9   16.0     8.0  8.0              25              6\n","10  18.0  4984.0  NaN              26              7\n","11   NaN     NaN  NaN              50              8\n","12   NaN     NaN  NaN              50              9\n","        ALM       LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000   0.00000   0.0000        0.000042             -3\n","1    0.0000   0.00000   0.0000        0.000042             -2\n","2    0.0000   0.00000   0.0000        0.000042             -1\n","3    2.2652   0.43091   1.5820        0.267070              0\n","4    2.6823   0.43091   1.5820        0.493830              1\n","5    3.5921   0.43091   4.3407        2.091700              2\n","6    5.8935   0.43091   8.5701        2.091700              3\n","7   11.3617   1.33950  13.6206        2.327400              4\n","8   13.3824  13.04200  18.5709        2.444300              5\n","9   14.7375       NaN      NaN        2.553700              6\n","10  15.1474       NaN      NaN        2.665200              7\n","11      NaN       NaN      NaN        2.889500              8\n","12      NaN       NaN      NaN       44.079500              9\n","     ALM   LQH   LSE  Riemannian_SQP  log10residual\n","0    0.0   0.0   0.0               0             -3\n","1    0.0   0.0   0.0               0             -2\n","2    0.0   0.0   0.0               0             -1\n","3    2.0   1.0   1.0               2              0\n","4    4.0   1.0   1.0               4              1\n","5    7.0   1.0   5.0              17              2\n","6   14.0   1.0   8.0              17              3\n","7   19.0   6.0  11.0              19              4\n","8   22.0  17.0  14.0              20              5\n","9   25.0   NaN   NaN              21              6\n","10  29.0   NaN   NaN              22              7\n","11   NaN   NaN   NaN              24              8\n","12   NaN   NaN   NaN             389              9\n","       ALM       LQH      LSE  Riemannian_SQP  log10residual\n","0   0.0000   0.00000   0.0000         0.00003             -3\n","1   0.0000   0.00000   0.0000         0.00003             -2\n","2   0.0000   0.00000   0.0000         0.00003             -1\n","3   2.5366   0.92194   1.9539         0.23653              0\n","4   5.2577   0.92194   1.9539         3.26570              1\n","5   6.5570   1.19770   6.1183         6.55800              2\n","6  12.7729   9.65290  34.2828         9.55440              3\n","7  34.0402  28.08220  97.8969        14.34160              4\n","8      NaN       NaN      NaN        32.59620              5\n","9      NaN       NaN      NaN        45.41710              6\n","    ALM   LQH    LSE  Riemannian_SQP  log10residual\n","0   0.0   0.0    0.0               0             -3\n","1   0.0   0.0    0.0               0             -2\n","2   0.0   0.0    0.0               0             -1\n","3   2.0   1.0    1.0               1              0\n","4   4.0   1.0    1.0              15              1\n","5   5.0   2.0    3.0              30              2\n","6  10.0   9.0   17.0              43              3\n","7  27.0  24.0  369.0              65              4\n","8   NaN   NaN    NaN             150              5\n","9   NaN   NaN    NaN             211              6\n","        ALM      LQH       LSE  Riemannian_SQP  log10residual\n","0    0.0000  0.00000   0.00000         0.00003             -3\n","1    0.0000  0.00000   0.00000         0.00003             -2\n","2    0.0000  0.00000   0.00000         0.00003             -1\n","3    3.2326  0.00000   0.27812         0.60690              0\n","4    6.1233  0.40832   0.73786         1.87080              1\n","5   12.4030  0.40832   1.98890         2.50320              2\n","6   20.0066  0.40832   4.57440         2.81620              3\n","7       NaN  0.76625   6.39950         3.10380              4\n","8       NaN  0.93391   8.58660         3.10380              5\n","9       NaN  1.51950  10.77610         3.41020              6\n","10      NaN      NaN       NaN         3.41020              7\n","11      NaN      NaN       NaN         3.41020              8\n","12      NaN      NaN       NaN         3.72210              9\n","13      NaN      NaN       NaN         3.72210             10\n","     ALM  LQH  LSE  Riemannian_SQP  log10residual\n","0    0.0  0.0  0.0               0             -3\n","1    0.0  0.0  0.0               0             -2\n","2    0.0  0.0  0.0               0             -1\n","3    2.0  0.0  1.0               2              0\n","4    4.0  1.0  2.0               6              1\n","5    8.0  1.0  4.0               8              2\n","6   13.0  1.0  6.0               9              3\n","7    NaN  4.0  7.0              10              4\n","8    NaN  6.0  8.0              10              5\n","9    NaN  8.0  9.0              11              6\n","10   NaN  NaN  NaN              11              7\n","11   NaN  NaN  NaN              11              8\n","12   NaN  NaN  NaN              12              9\n","13   NaN  NaN  NaN              12             10\n","        ALM       LQH       LSE  Riemannian_SQP      dim\n","0  0.449495  0.019387  0.025766        0.062676   [4, 8]\n","0  0.455313  0.026818  0.037480        0.113930  [5, 10]\n","0  0.498979  0.047198  0.198916        0.209848  [6, 12]\n","0  0.513402  0.037755  0.060438        0.307105  [7, 14]\n","       ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0   0.0000  0.00000  0.00000        0.000032             -3\n","1   0.0000  0.00000  0.00000        0.000032             -2\n","2   0.0000  0.00000  0.00000        0.000032             -1\n","3   1.0949  0.26550  0.47554        0.182880              0\n","4   1.2256  0.26550  0.47554        0.352830              1\n","5   1.2816  0.26550  1.40030        0.437620              2\n","6   1.3947  0.53395  2.03740        0.530010              3\n","7   7.0124  1.79090  2.03740        0.615530              4\n","8   7.2352  1.98690  2.21840        0.615530              5\n","9   7.4562      NaN  2.58770        0.711180              6\n","10  7.4562      NaN      NaN        0.711180              7\n","11     NaN      NaN      NaN        0.711180              8\n","12     NaN      NaN      NaN        0.711180              9\n","13     NaN      NaN      NaN        0.791310             10\n","     ALM   LQH  LSE  Riemannian_SQP  log10residual\n","0    0.0   0.0  0.0               0             -3\n","1    0.0   0.0  0.0               0             -2\n","2    0.0   0.0  0.0               0             -1\n","3    2.0   1.0  1.0               2              0\n","4    4.0   1.0  1.0               4              1\n","5    5.0   1.0  3.0               5              2\n","6    7.0   6.0  5.0               6              3\n","7   13.0  12.0  5.0               7              4\n","8   14.0  19.0  6.0               7              5\n","9   15.0   NaN  8.0               8              6\n","10  15.0   NaN  NaN               8              7\n","11   NaN   NaN  NaN               8              8\n","12   NaN   NaN  NaN               8              9\n","13   NaN   NaN  NaN               9             10\n","        ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000  0.00000   0.0000        0.000105             -3\n","1    0.0000  0.00000   0.0000        0.000105             -2\n","2    0.0000  0.00000   0.0000        0.000105             -1\n","3    2.3310  0.64464   1.7633        0.359600              0\n","4    2.6887  0.64464   1.7633        1.956900              1\n","5    5.0425  0.64464   5.2212        3.797500              2\n","6   10.1330  1.30790  16.8766        4.330300              3\n","7       NaN  2.35980  44.6412        4.501600              4\n","8       NaN  3.40820      NaN        4.677700              5\n","9       NaN  4.44880      NaN        5.544200              6\n","10      NaN      NaN      NaN        8.217500              7\n","11      NaN      NaN      NaN       16.650700              8\n","12      NaN      NaN      NaN       55.263200              9\n","    ALM  LQH   LSE  Riemannian_SQP  log10residual\n","0   0.0  0.0   0.0               0             -3\n","1   0.0  0.0   0.0               0             -2\n","2   0.0  0.0   0.0               0             -1\n","3   2.0  1.0   1.0               2              0\n","4   3.0  1.0   1.0              11              1\n","5   5.0  1.0   3.0              21              2\n","6   9.0  2.0  10.0              24              3\n","7   NaN  4.0  62.0              25              4\n","8   NaN  6.0   NaN              26              5\n","9   NaN  8.0   NaN              31              6\n","10  NaN  NaN   NaN              46              7\n","11  NaN  NaN   NaN              95              8\n","12  NaN  NaN   NaN             318              9\n","        ALM      LQH       LSE  Riemannian_SQP  log10residual\n","0    0.0000  0.00000    0.0000        0.000031             -3\n","1    0.0000  0.00000    0.0000        0.000031             -2\n","2    0.0000  0.00000    0.0000        0.000031             -1\n","3    2.7723  0.38021    1.9614        0.557000              0\n","4    5.5564  0.38021    1.9614        2.010200              1\n","5    7.0587  0.38021    6.0983        6.991300              2\n","6    9.9186  0.51332   20.4485        8.513300              3\n","7   14.0139  1.27900  143.9687       15.166500              4\n","8       NaN  6.71810       NaN       15.166500              5\n","9       NaN      NaN       NaN       15.441700              6\n","10      NaN      NaN       NaN       15.758600              7\n","11      NaN      NaN       NaN       15.758600              8\n","12      NaN      NaN       NaN       15.758600              9\n","     ALM  LQH    LSE  Riemannian_SQP  log10residual\n","0    0.0  0.0    0.0               0             -3\n","1    0.0  0.0    0.0               0             -2\n","2    0.0  0.0    0.0               0             -1\n","3    2.0  1.0    1.0               2              0\n","4    4.0  1.0    1.0               7              1\n","5    5.0  1.0    3.0              23              2\n","6    7.0  2.0   10.0              28              3\n","7   10.0  4.0  982.0              49              4\n","8    NaN  8.0    NaN              49              5\n","9    NaN  NaN    NaN              50              6\n","10   NaN  NaN    NaN              51              7\n","11   NaN  NaN    NaN              51              8\n","12   NaN  NaN    NaN              51              9\n","       ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0   0.0000   0.0000   0.0000        0.000032             -3\n","1   0.0000   0.0000   0.0000        0.000032             -2\n","2   0.0000   0.0000   0.0000        0.514640             -1\n","3   3.2734   1.6362   2.8523        0.999900              0\n","4   6.4982   1.6362   2.8523        4.303900              1\n","5  13.2337   3.4088  10.8388        4.727100              2\n","6  18.2956  13.7614  79.0984       68.431900              3\n","7  44.4136  29.3726      NaN       71.807000              4\n","8      NaN  75.2924      NaN       79.747900              5\n","9      NaN      NaN      NaN      122.510600              6\n","    ALM    LQH   LSE  Riemannian_SQP  log10residual\n","0   0.0    0.0   0.0               0             -3\n","1   0.0    0.0   0.0               0             -2\n","2   0.0    0.0   0.0               1             -1\n","3   2.0    1.0   1.0               2              0\n","4   4.0    1.0   1.0               9              1\n","5   8.0    2.0   4.0              10              2\n","6  11.0    8.0  34.0             136              3\n","7  27.0   17.0   NaN             143              4\n","8   NaN  919.0   NaN             160              5\n","9   NaN    NaN   NaN             251              6\n","        ALM       LQH       LSE  Riemannian_SQP      dim\n","0  0.455371  0.024411  0.027010        0.089096   [4, 8]\n","0  0.493742  0.027411  0.116695        0.173834  [5, 10]\n","0  0.489712  0.034302  0.125827        0.301569  [6, 12]\n","0  0.512706  0.054174  0.595047        0.485376  [7, 14]\n","          ALM        LQH       LSE  Riemannian_SQP  log10residual\n","0    0.000000   0.000000   0.00000        0.000164             -3\n","1    0.000000   0.000000   0.00000        0.000164             -2\n","2    0.000000   0.000000   0.00000        0.000164             -1\n","3    0.074736   0.041919   0.89001        0.221770              0\n","4    0.159230   0.041919   0.89001        0.879760              1\n","5    0.159230   0.041919   1.06130        1.183500              2\n","6    0.159230   0.041919   1.14680        2.048400              3\n","7    0.177160   0.117810   1.22690        3.783500              4\n","8    0.471240   0.572530   1.29940        3.783500              5\n","9    0.489100   0.587150   2.79750        3.842200              6\n","10   0.513800   0.638510   2.81820       35.009100              7\n","11   0.565880   0.653370   2.86340       88.407300              8\n","12   0.593880   0.681120   2.95710      154.275000              9\n","13   1.558400   2.969300   2.97370             NaN             10\n","14   7.591100   6.295100   3.01210             NaN             11\n","15  12.032100   8.496900   3.66110             NaN             12\n","16  19.156700  11.270900  20.81170             NaN             13\n","     ALM   LQH   LSE  Riemannian_SQP  log10residual\n","0      0     0     0             0.0             -3\n","1      0     0     0             0.0             -2\n","2      0     0     0             0.0             -1\n","3      1     1     1             3.0              0\n","4      2     1     1            13.0              1\n","5      2     1     3            18.0              2\n","6      2     1     4            32.0              3\n","7      3     3     5            60.0              4\n","8      6     6     6            60.0              5\n","9      8     8     8            61.0              6\n","10    11    11    10           591.0              7\n","11    13    13    13          1504.0              8\n","12    16    17    15          2634.0              9\n","13   148   365    17             NaN             10\n","14   991   867    20             NaN             11\n","15  1609  1206    70             NaN             12\n","16  2617  1634  1363             NaN             13\n","        ALM       LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000  0.000000   0.0000        0.000033             -3\n","1    0.0000  0.000000   0.0000        0.000033             -2\n","2    0.0000  0.000000   0.0000        0.000033             -1\n","3    1.2639  0.059224   1.3271        0.270420              0\n","4    2.3712  0.059224   1.3271        1.046000              1\n","5    2.3712  0.059224   1.8508        1.567200              2\n","6    2.3712  0.059224   2.3930        1.790900              3\n","7    2.4427  0.160210   8.7494        1.901200              4\n","8   35.7444  0.219210   8.7494        1.901200              5\n","9   38.1246  0.233150   8.7494        2.014800              6\n","10      NaN  0.297130   8.7937        2.273700              7\n","11      NaN  0.314690   8.9674        5.623500              8\n","12      NaN  0.333680  18.7882       35.993700              9\n","13      NaN  1.549800      NaN             NaN             10\n","14      NaN  3.450500      NaN             NaN             11\n","15      NaN  5.256700      NaN             NaN             12\n","16      NaN  6.634000      NaN             NaN             13\n","     ALM  LQH    LSE  Riemannian_SQP  log10residual\n","0    0.0    0    0.0             0.0             -3\n","1    0.0    0    0.0             0.0             -2\n","2    0.0    0    0.0             0.0             -1\n","3    1.0    1    1.0             2.0              0\n","4    2.0    1    1.0             8.0              1\n","5    2.0    1    3.0            12.0              2\n","6    2.0    1    5.0            14.0              3\n","7    3.0    4    9.0            15.0              4\n","8   34.0    6    9.0            15.0              5\n","9   42.0    8    9.0            16.0              6\n","10   NaN   11   11.0            18.0              7\n","11   NaN   12   13.0            45.0              8\n","12   NaN   15  506.0           291.0              9\n","13   NaN  154    NaN             NaN             10\n","14   NaN  384    NaN             NaN             11\n","15   NaN  589    NaN             NaN             12\n","16   NaN  742    NaN             NaN             13\n","        ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000  0.00000   0.0000        0.000029             -3\n","1    0.0000  0.00000   0.0000        0.000029             -2\n","2    0.0000  0.00000   0.0000        0.202470             -1\n","3    1.7107  0.19659   1.7643        0.816530              0\n","4    2.8867  0.19659   1.7643        2.273900              1\n","5    2.8867  0.19659   8.1562        2.679100              2\n","6    5.3359  0.19659  12.3215        3.070800              3\n","7    7.8308  0.33509  18.6857        3.483400              4\n","8   46.7802  0.57062  85.2663        4.921900              5\n","9       NaN  0.92074      NaN       55.591800              6\n","10      NaN  1.24500      NaN             NaN              7\n","     ALM  LQH   LSE  Riemannian_SQP  log10residual\n","0    0.0    0   0.0             0.0             -3\n","1    0.0    0   0.0             0.0             -2\n","2    0.0    0   0.0             1.0             -1\n","3    1.0    1   1.0             4.0              0\n","4    2.0    1   1.0            11.0              1\n","5    2.0    1   4.0            13.0              2\n","6    4.0    1   6.0            15.0              3\n","7    6.0    3   9.0            17.0              4\n","8   39.0    6  41.0            24.0              5\n","9    NaN   10   NaN           269.0              6\n","10   NaN   17   NaN             NaN              7\n","       ALM       LQH      LSE  Riemannian_SQP  log10residual\n","0   0.0000  0.000000   0.0000        0.000031             -3\n","1   0.0000  0.000000   0.0000        0.000031             -2\n","2   0.0000  0.000000   0.0000        0.361050             -1\n","3   2.8702  0.091954   2.2662        0.645610              0\n","4   2.8702  0.091954   2.9692        2.951300              1\n","5   4.1325  0.091954  10.3332        4.342900              2\n","6   6.3819  0.091954  15.0146        6.720500              3\n","7      NaN  0.208030  15.4147        7.426600              4\n","8      NaN  0.243280  15.7573       13.250300              5\n","9      NaN  0.336800  15.7573             NaN              6\n","10     NaN  0.369670  15.8476             NaN              7\n","11     NaN  0.423220  16.1220             NaN              8\n","12     NaN  0.521430  16.1959             NaN              9\n","13     NaN  0.571070  16.4551             NaN             10\n","14     NaN  0.658820  36.9450             NaN             11\n","15     NaN  1.506400  55.6115             NaN             12\n","16     NaN  7.336000  71.9592             NaN             13\n","    ALM  LQH   LSE  Riemannian_SQP  log10residual\n","0   0.0    0     0             0.0             -3\n","1   0.0    0     0             0.0             -2\n","2   0.0    0     0             1.0             -1\n","3   2.0    1     1             2.0              0\n","4   2.0    1     2             9.0              1\n","5   3.0    1     5            13.0              2\n","6   5.0    1     7            20.0              3\n","7   NaN    4     8            22.0              4\n","8   NaN    6     9            39.0              5\n","9   NaN    8     9             NaN              6\n","10  NaN   10    10             NaN              7\n","11  NaN   13    13             NaN              8\n","12  NaN   15    15             NaN              9\n","13  NaN   19    23             NaN             10\n","14  NaN   26   614             NaN             11\n","15  NaN   89  1150             NaN             12\n","16  NaN  532  1625             NaN             13\n","        ALM       LQH       LSE  Riemannian_SQP      dim\n","0  0.007242  0.006744  0.013767        0.058503   [4, 8]\n","0  0.463584  0.008777  0.020388        0.122053  [5, 10]\n","0  1.199551  0.052658  2.086698        0.209918  [6, 12]\n","0  0.516441  0.013550  0.041960        0.335031  [7, 14]\n","         ALM       LQH      LSE  Riemannian_SQP  log10residual\n","0    0.00000  0.000000  0.00000         0.00003             -3\n","1    0.00000  0.000000  0.00000         0.00003             -2\n","2    0.00000  0.000000  0.00000         0.00003             -1\n","3    0.19929  0.034340  0.11288         0.17598              0\n","4    0.83294  0.034340  0.11288         0.44345              1\n","5    0.83294  0.034340  0.24313         1.31810              2\n","6    0.83294  0.034340  0.27184         1.58220              3\n","7    0.83843  0.084473  0.32906         1.93510              4\n","8   55.91950  0.092489  0.33859         2.01930              5\n","9        NaN  0.110770  0.39395         2.01930              6\n","10       NaN  0.145510  0.41022         2.09980              7\n","11       NaN  0.156500  0.42933         3.61850              8\n","12       NaN  0.162740  0.42933        43.53350              9\n","13       NaN  0.175180  0.47917             NaN             10\n","14       NaN  0.192390  0.58386             NaN             11\n","15       NaN  0.231720  0.72021             NaN             12\n","16       NaN  0.323830  0.73310             NaN             13\n","     ALM  LQH  LSE  Riemannian_SQP  log10residual\n","0    0.0    0    0             0.0             -3\n","1    0.0    0    0             0.0             -2\n","2    0.0    0    0             0.0             -1\n","3    1.0    1    1             2.0              0\n","4    2.0    1    1             5.0              1\n","5    2.0    1    3            15.0              2\n","6    2.0    1    4            18.0              3\n","7    3.0    3    5            22.0              4\n","8   83.0    5    6            23.0              5\n","9    NaN    7    8            23.0              6\n","10   NaN   10   10            24.0              7\n","11   NaN   13   12            42.0              8\n","12   NaN   14   12           525.0              9\n","13   NaN   17   16             NaN             10\n","14   NaN   20   24             NaN             11\n","15   NaN   26   34             NaN             12\n","16   NaN   40   35             NaN             13\n","         ALM       LQH      LSE  Riemannian_SQP  log10residual\n","0     0.0000   0.00000   0.0000        0.000029             -3\n","1     0.0000   0.00000   0.0000        0.000029             -2\n","2     0.0000   0.00000   0.0000        0.156080             -1\n","3     1.1809   0.20172   1.5788        0.700000              0\n","4     1.5653   0.20172   1.5788        2.238700              1\n","5     1.5653   0.20172   2.0194        3.721900              2\n","6     1.6696   0.20172   3.3688        4.228600              3\n","7     1.6696   0.80275   5.2055        4.386600              4\n","8     1.6774  15.19130  51.8978        4.559800              5\n","9   165.4921       NaN  85.8212       12.653700              6\n","10       NaN       NaN      NaN       12.825200              7\n","11       NaN       NaN      NaN       12.825200              8\n","12       NaN       NaN      NaN       12.825200              9\n","      ALM   LQH   LSE  Riemannian_SQP  log10residual\n","0     0.0   0.0   0.0               0             -3\n","1     0.0   0.0   0.0               0             -2\n","2     0.0   0.0   0.0               1             -1\n","3     1.0   1.0   1.0               4              0\n","4     2.0   1.0   1.0              13              1\n","5     2.0   1.0   3.0              22              2\n","6     3.0   1.0   6.0              25              3\n","7     3.0   4.0   8.0              26              4\n","8     4.0  18.0  36.0              27              5\n","9   157.0   NaN  57.0              74              6\n","10    NaN   NaN   NaN              75              7\n","11    NaN   NaN   NaN              75              8\n","12    NaN   NaN   NaN              75              9\n","       ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0   0.0000  0.00000   0.0000        0.000028             -3\n","1   0.0000  0.00000   0.0000        0.000028             -2\n","2   1.7650  0.00000   0.0000        0.295040             -1\n","3   1.7650  0.36785   1.9519        1.683500              0\n","4   2.8807  0.36785   1.9519        5.220100              1\n","5   2.8807  0.36785   3.4340        7.163900              2\n","6   2.8807  0.36785   5.3315       16.343600              3\n","7   4.5327  1.91560   8.2968       20.133000              4\n","8   7.1748  5.64700  22.6287       23.394000              5\n","9   7.5211  5.76420  28.0519       30.626000              6\n","10  8.1676      NaN  36.1281             NaN              7\n","11  9.1373      NaN  43.3909             NaN              8\n","    ALM   LQH  LSE  Riemannian_SQP  log10residual\n","0     0   0.0    0             0.0             -3\n","1     0   0.0    0             0.0             -2\n","2     1   0.0    0             1.0             -1\n","3     1   1.0    1             6.0              0\n","4     2   1.0    1            18.0              1\n","5     2   1.0    2            25.0              2\n","6     2   1.0    3            58.0              3\n","7     4   4.0    5            72.0              4\n","8     8   7.0   12            84.0              5\n","9     9  12.0   16           111.0              6\n","10   10   NaN   22             NaN              7\n","11   15   NaN   28             NaN              8\n","        ALM      LQH      LSE  Riemannian_SQP  log10residual\n","0    0.0000  0.00000   0.0000         0.00003             -3\n","1    0.0000  0.00000   0.0000         0.00003             -2\n","2    1.6555  0.00000   0.0000         0.46226             -1\n","3    2.9921  0.16039   2.4332         1.85510              0\n","4    2.9921  0.16039   2.4332         6.08180              1\n","5    2.9921  0.16039   4.1318        17.43190              2\n","6    4.3687  0.16039   7.1841        21.19780              3\n","7   26.5574  1.13480  19.2550        21.19780              4\n","8   37.1025  7.12470      NaN        23.95670              5\n","9       NaN  9.65740      NaN        23.95670              6\n","10      NaN      NaN      NaN        57.01630              7\n","     ALM   LQH  LSE  Riemannian_SQP  log10residual\n","0    0.0   0.0  0.0               0             -3\n","1    0.0   0.0  0.0               0             -2\n","2    1.0   0.0  0.0               1             -1\n","3    2.0   1.0  1.0               4              0\n","4    2.0   1.0  1.0              13              1\n","5    2.0   1.0  2.0              37              2\n","6    3.0   1.0  4.0              45              3\n","7   18.0   4.0  9.0              45              4\n","8   26.0   9.0  NaN              51              5\n","9    NaN  43.0  NaN              51              6\n","10   NaN   NaN  NaN             125              7\n","        ALM       LQH       LSE  Riemannian_SQP      dim\n","0  0.714843  0.007227  0.014764        0.082160   [4, 8]\n","0  1.060933  0.424435  1.588489        0.165494  [5, 10]\n","0  0.499863  0.157772  1.436985        0.270719  [6, 12]\n","0  0.496292  0.161706  2.456618        0.451831  [7, 14]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"QV3DnG2vSrUA"},"source":["## ResIter, ResTime Figures"]},{"cell_type":"code","metadata":{"id":"-6t7d92LQtHh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1612857823968,"user_tz":-540,"elapsed":28628,"user":{"displayName":"Mitsuaki Obara","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgTc8J_ZbYtCo4EduXT-CtVU_yA3tGcM2yJdBrd=s64","userId":"01228617048231420770"}},"outputId":"df4b87a0-8d94-4a22-bf97-1b8568c69ac0"},"source":["# make subtables (residual per slc iterations and time per slc iterations) \n","slc = -1\n","for eqratio in eqratio_set:\n","  for rank in rank_set:\n","    for dim in dim_set:\n","      fig, axs = plt.subplots(dpi=600)\n","      time = pd.DataFrame()\n","      violation_sum = pd.DataFrame()\n","      rdim = dim[0]\n","      cdim = dim[1]\n","      for method in method_set:\n","        data = pd.read_csv(root_dir + input_dir + \"RC_nn_%s_nrep%dRowdim%dColdim%dRank%dTol%dEqratio%0.1e.csv\" %(method, rep, rdim, cdim, rank, tol, eqratio))\n","\n","        try:\n","          coltime = data['time'].copy()\n","          coltime.name = method\n","          time = pd.concat([time, coltime], axis = 1)\n","        except:\n","          pass\n","\n","        try:\n","          colviosum = data['KKT_residual'].copy()\n","          colviosum.name = method\n","          violation_sum = pd.concat([violation_sum, colviosum], axis = 1)\n","        except:\n","          pass\n","\n","      # make a residual-iteration table\n","      subviolation_sum = violation_sum.iloc[:slc,:]\n","      subviolation_sum.rename(columns={'ALM' : 'RALM','LSE' : 'REPM(LSE)', 'LQH' : 'REPM(LQH)' , 'Riemannian_SQP': 'RSQO'}, inplace=True)\n","      print(subviolation_sum)\n","      subviolation_sum.to_csv(root_dir + output_dir + \"exploratory_RC_nn_ResIter%dFigure_nrep%dRowdim%dColdim%dRank%dTol%dEqratio%0.1e.csv\" % (slc, rep, rdim, cdim, rank, tol, eqratio))\n","\n","      # make a residual-iteration figure\n","      #plt.xticks(np.arange(subviolation_sum.shape[0]))\n","      #plt.xlim(0, subviolation_sum.shape[0]-1)\n","      #axs.grid(True)\n","      minlog10res = np.log10(subviolation_sum).min().min()\n","      maxlog10res = min(np.log10(subviolation_sum).max().max(), 3)\n","      minlog10res = math.floor(minlog10res) - 2\n","      maxlog10res = math.ceil(maxlog10res) + 1\n","      # xtime_array = np.arange(start = mintime, stop = maxtime, step = 0.1)\n","      #plt.xlim(0, maxtime)\n","      plt.ylim(minlog10res, maxlog10res)\n","      axs.plot(np.arange(subviolation_sum.shape[0]), np.log10(subviolation_sum), label = subviolation_sum.columns)\n","      axs.legend(subviolation_sum.columns, loc='upper right')\n","      #axs.hlines(-1 * tol, 0, max(time.max()), \"black\", linestyles='dashed') # hlines\n","      axs.set(xlabel = \"Iteration\")\n","      axs.set(ylabel = 'Residual (log10 scale)')\n","      plt.subplots_adjust(wspace=0.3, hspace=0.3)\n","      title = \"exploratory_RC_nn_ResIter%dFigure_nrep%dRowdim%dColdim%dRank%dTol%dEqratio%0.1e\" % (slc, rep, rdim, cdim, rank, tol, eqratio)\n","      plt.savefig(root_dir + output_dir + title + \".pdf\")\n","      plt.close()\n","\n","      # make a time-iteration table\n","      subtime = time.iloc[:slc,:]\n","      subtime.rename(columns={'ALM' : 'RALM','LSE' : 'REPM(LSE)', 'LQH' : 'REPM(LQH)' ,'fmincon_SQP': 'fmincon SQO', 'Riemannian_SQP': 'RSQO'}, inplace=True)\n","      print(subtime)\n","      subtime.to_csv(root_dir + output_dir + \"exploratoryRC_nn_ResIter%dFigure_nrep%dRowdim%dColdim%dRank%dTol%dEqratio%0.1e.csv\" % (slc, rep, rdim, cdim, rank, tol, eqratio))\n","\n","      # reset figure\n","      restime_fig, restime_axs = plt.subplots(dpi=600)\n","\n","      # make a residual-time table for the first slc iterations\n","      mintime = subtime.min().min()  # take min() twice for the overall minimal time \n","      maxtime = subtime.max().max()\n","      mintime = math.floor(mintime)\n","      maxtime = math.ceil(maxtime) + 1\n","\n","      minlog10res = np.log10(subviolation_sum).min().min()\n","      maxlog10res = min(np.log10(subviolation_sum).max().max(), 3)\n","      minlog10res = math.floor(minlog10res) - 2\n","      maxlog10res = math.ceil(maxlog10res) + 1\n","      # xtime_array = np.arange(start = mintime, stop = maxtime, step = 0.1)\n","      #plt.xlim(0, maxtime)\n","      plt.ylim(minlog10res, maxlog10res)\n","      restime_axs.grid(True)\n","      for method in method_set:\n","        method_time = time[method].values\n","        method_residual = violation_sum[method].values\n","        restime_axs.plot(method_time, np.log10(method_residual))\n","      restime_axs.legend(subviolation_sum.columns, loc='upper right', fontsize = 'small')\n","      restime_axs.set(xlabel = \"Time\")\n","      restime_axs.set(ylabel = 'Residual (log10 scale)')\n","      plt.subplots_adjust(wspace=0.3, hspace=0.3)\n","      title = \"exploratory_RC_nn_ResTime%dFigure_nrep%dRowdim%dColdim%dRank%dTol%dEqratio%0.1e\" % (slc, rep, rdim, cdim, rank, tol, eqratio)\n","      plt.savefig(root_dir + output_dir + title + \".pdf\")\n","      plt.close()"],"execution_count":19,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM     REPM(LQH)  REPM(LSE)          RSQO\n","0     3.95910  1.380000e-07   0.724030  4.929300e+00\n","1     1.89720  1.380000e-07   0.019997  7.404900e-05\n","2     0.57146  1.910100e-07   0.004184  1.506500e-06\n","3     0.26805  2.704900e-07   0.000480  2.402700e-07\n","4     0.22979  3.884200e-07   0.000023  2.394900e-07\n","...       ...           ...        ...           ...\n","7546      NaN  2.952800e-09        NaN           NaN\n","7547      NaN  3.473300e-09        NaN           NaN\n","7548      NaN  3.641900e-09        NaN           NaN\n","7549      NaN  4.457800e-09        NaN           NaN\n","7550      NaN  4.863500e-09        NaN           NaN\n","\n","[7551 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM   REPM(LQH)  REPM(LSE)      RSQO\n","0     0.00000    0.000000    0.00000  0.000165\n","1     0.97121    0.009177    0.27020  0.236650\n","2     2.15540    0.016572    0.36388  0.350510\n","3     3.38120    0.022231    0.43681  0.443700\n","4     4.52360    0.029216    0.51439  0.544040\n","...       ...         ...        ...       ...\n","7546      NaN  175.829900        NaN       NaN\n","7547      NaN  175.851500        NaN       NaN\n","7548      NaN  175.873200        NaN       NaN\n","7549      NaN  175.894800        NaN       NaN\n","7550      NaN  175.916500        NaN       NaN\n","\n","[7551 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0    4.53150   0.551250    1.06420  6.735700e+00\n","1    2.05390   0.001071    0.21421  1.545088e+07\n","2    0.77490   0.000369    0.19922  3.422455e+09\n","3    0.47434   0.000115    0.19639  8.628907e+09\n","4    0.17049   0.000043    0.19751  1.960431e+10\n","..       ...        ...        ...           ...\n","350      inf        NaN        NaN           NaN\n","351      inf        NaN        NaN           NaN\n","352      inf        NaN        NaN           NaN\n","353      inf        NaN        NaN           NaN\n","354      inf        NaN        NaN           NaN\n","\n","[355 rows x 4 columns]\n","         RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0      0.0000    0.00000     0.0000  0.00003\n","1      1.0273    0.78430     1.3691  0.37731\n","2      2.3975    0.89174     3.0610  0.72409\n","3      3.8199    0.96914     4.7971  1.09290\n","4      5.1722    1.07060     6.4604  1.46040\n","..        ...        ...        ...      ...\n","350  157.1730        NaN        NaN      NaN\n","351  162.2069        NaN        NaN      NaN\n","352  167.1183        NaN        NaN      NaN\n","353  171.8293        NaN        NaN      NaN\n","354  176.7023        NaN        NaN      NaN\n","\n","[355 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0    4.97070   0.026956   0.636250  6.668500e+00\n","1    2.69200   0.003545   0.101550  4.329225e+06\n","2    0.81008   0.003478   0.060438  8.048128e+07\n","3    0.25292   0.003464   0.033051  1.376987e+07\n","4    0.14203   0.003423   0.024469  4.746360e+06\n","..       ...        ...        ...           ...\n","362      NaN        NaN        NaN  7.969418e+05\n","363      NaN        NaN        NaN  8.053243e+05\n","364      NaN        NaN        NaN  7.943793e+05\n","365      NaN        NaN        NaN  8.887126e+05\n","366      NaN        NaN        NaN  8.812787e+05\n","\n","[367 rows x 4 columns]\n","       RALM  REPM(LQH)  REPM(LSE)        RSQO\n","0    0.0000    0.00000     0.0000    0.000031\n","1    1.2104    0.14849     1.7348    0.454380\n","2    2.8368    0.20345     3.7621    9.930900\n","3    4.5734    0.34098     5.8217   10.415800\n","4    6.4607    0.85580     6.5487   10.865900\n","..      ...        ...        ...         ...\n","362     NaN        NaN        NaN  178.016600\n","363     NaN        NaN        NaN  178.466600\n","364     NaN        NaN        NaN  178.899300\n","365     NaN        NaN        NaN  179.357800\n","366     NaN        NaN        NaN  179.878200\n","\n","[367 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0    5.12410    0.39145    1.06800  9.088200e+00\n","1    2.81160    0.14887    0.19501  1.491718e+05\n","2    1.07420    0.14959    0.16505  1.857379e+09\n","3    0.60546    0.15254    0.15549  8.298901e+09\n","4    0.40064    0.15818    0.15926  1.827888e+11\n","..       ...        ...        ...           ...\n","386      NaN    0.18173        NaN           NaN\n","387      NaN    0.18173        NaN           NaN\n","388      NaN    0.18173        NaN           NaN\n","389      NaN    0.18173        NaN           NaN\n","390      NaN    0.18173        NaN           NaN\n","\n","[391 rows x 4 columns]\n","       RALM  REPM(LQH)  REPM(LSE)       RSQO\n","0    0.0000     0.0000     0.0000   0.000031\n","1    1.3821     1.7078     1.8837  11.495300\n","2    2.5552     2.0477     4.2671  11.978900\n","3    3.8119     2.3908     6.6212  12.706900\n","4    5.0679     3.6745     8.9821  24.254200\n","..      ...        ...        ...        ...\n","386     NaN    36.4152        NaN        NaN\n","387     NaN    36.4611        NaN        NaN\n","388     NaN    36.5033        NaN        NaN\n","389     NaN    36.5477        NaN        NaN\n","390     NaN    36.6259        NaN        NaN\n","\n","[391 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0    5.050600   0.088316   0.105330  5.570300e+00\n","1    2.545300   0.008309   0.010912  1.574733e+11\n","2    0.592040   0.008283   0.008714  1.572286e+08\n","3    0.138200   0.000018   0.008620  3.146421e+07\n","4    0.036428   0.000026   0.000129  4.128733e+07\n","..        ...        ...        ...           ...\n","691       NaN        NaN        NaN  3.885017e+07\n","692       NaN        NaN        NaN  3.682009e+07\n","693       NaN        NaN        NaN  3.742600e+07\n","694       NaN        NaN        NaN  3.766532e+07\n","695       NaN        NaN        NaN  3.760529e+07\n","\n","[696 rows x 4 columns]\n","       RALM  REPM(LQH)  REPM(LSE)        RSQO\n","0    0.0000   0.000000    0.00000    0.000036\n","1    1.2159   0.056322    0.47616    0.171460\n","2    1.3183   0.072995    0.54424    5.915900\n","3    1.3676   0.361890    0.59140    6.185400\n","4    2.4466   0.368160    1.19240    6.429200\n","..      ...        ...        ...         ...\n","691     NaN        NaN        NaN  178.745100\n","692     NaN        NaN        NaN  179.001200\n","693     NaN        NaN        NaN  179.272500\n","694     NaN        NaN        NaN  179.527300\n","695     NaN        NaN        NaN  179.797100\n","\n","[696 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0    5.714900   0.363780   0.879020  6.243000e+00\n","1    3.012700   0.047876   0.067487  4.017180e+06\n","2    0.729830   0.047905   0.055613  9.695962e+06\n","3    0.190350   0.048017   0.046862  1.151386e+07\n","4    0.086063   0.048429   0.043728  9.516962e+07\n","..        ...        ...        ...           ...\n","330       inf        NaN        NaN           NaN\n","331       inf        NaN        NaN           NaN\n","332       inf        NaN        NaN           NaN\n","333       inf        NaN        NaN           NaN\n","334       inf        NaN        NaN           NaN\n","\n","[335 rows x 4 columns]\n","         RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0      0.0000    0.00000     0.0000  0.000032\n","1      1.1590    0.24284     1.5132  0.402240\n","2      2.7040    0.29005     3.0922  8.006100\n","3      4.0572    0.51694     4.6299  8.256500\n","4      5.4064    0.72438     6.2905  8.487700\n","..        ...        ...        ...       ...\n","330  158.2220        NaN        NaN       NaN\n","331  163.1085        NaN        NaN       NaN\n","332  167.8223        NaN        NaN       NaN\n","333  172.7465        NaN        NaN       NaN\n","334  177.6569        NaN        NaN       NaN\n","\n","[335 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0    6.26430    0.53503   1.180300  8.845800e+00\n","1    3.12040    0.12000   0.129090  3.377756e+07\n","2    0.84716    0.12082   0.115110  1.698258e+10\n","3    0.21700    0.12247   0.091487  8.594202e+11\n","4    0.14272    0.12489   0.089755  1.189213e+10\n","..       ...        ...        ...           ...\n","323      inf        NaN        NaN           NaN\n","324      inf        NaN        NaN           NaN\n","325      inf        NaN        NaN           NaN\n","326      inf        NaN        NaN           NaN\n","327      inf        NaN        NaN           NaN\n","\n","[328 rows x 4 columns]\n","         RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0      0.0000    0.00000     0.0000  0.000031\n","1      1.3325    0.96145     2.1340  0.414140\n","2      3.0814    1.31460     4.5980  0.817630\n","3      4.4734    2.01660     6.6688  1.517200\n","4      6.1629    2.88940     8.7799  1.989300\n","..        ...        ...        ...       ...\n","323  154.1134        NaN        NaN       NaN\n","324  160.7276        NaN        NaN       NaN\n","325  167.0519        NaN        NaN       NaN\n","326  173.2173        NaN        NaN       NaN\n","327  179.1889        NaN        NaN       NaN\n","\n","[328 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0     6.66090   0.394020   1.084500  9.076200e+00\n","1     3.26570   0.028127   0.040121  3.231071e+05\n","2     0.92521   0.028104   0.009918  3.497385e+07\n","3     0.25489   0.028107   0.001869  3.799673e+07\n","4     0.15253   0.028118   0.000128  1.106195e+09\n","...       ...        ...        ...           ...\n","1236      NaN   0.052996        NaN           NaN\n","1237      NaN   0.052999        NaN           NaN\n","1238      NaN   0.052996        NaN           NaN\n","1239      NaN   0.052997        NaN           NaN\n","1240      NaN   0.052996        NaN           NaN\n","\n","[1241 rows x 4 columns]\n","        RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     0.0000    0.00000     0.0000  0.00003\n","1     1.7074    0.37444     1.1384  0.85072\n","2     3.1630    0.57843     2.4128  1.60500\n","3     5.1761    0.67733     3.7718  2.49560\n","4     7.5253    0.82398     4.2498  3.20280\n","...      ...        ...        ...      ...\n","1236     NaN  177.45760        NaN      NaN\n","1237     NaN  177.49940        NaN      NaN\n","1238     NaN  177.54750        NaN      NaN\n","1239     NaN  177.59330        NaN      NaN\n","1240     NaN  177.64170        NaN      NaN\n","\n","[1241 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0     3.699800   0.563130   1.068700  4.278900e+00\n","1     1.562300   0.020734   0.050107  3.330900e-01\n","2     0.452400   0.014515   0.024328  3.481600e-01\n","3     0.133200   0.010091   0.007819  3.573000e-01\n","4     0.030857   0.006971   0.001729  3.001800e-01\n","...        ...        ...        ...           ...\n","2865       NaN        NaN        NaN  1.653800e-10\n","2866       NaN        NaN        NaN  1.653300e-10\n","2867       NaN        NaN        NaN  1.652700e-10\n","2868       NaN        NaN        NaN  1.652200e-10\n","2869       NaN        NaN        NaN  1.651700e-10\n","\n","[2870 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM  REPM(LQH)  REPM(LSE)        RSQO\n","0     0.00000    0.00000     0.0000    0.000069\n","1     0.85734    0.20818     1.3280    0.082894\n","2     1.90320    0.25982     1.7553    0.154520\n","3     2.00400    0.35269     3.0807    0.225990\n","4     2.07470    0.45328     3.4901    0.302230\n","...       ...        ...        ...         ...\n","2865      NaN        NaN        NaN  179.661700\n","2866      NaN        NaN        NaN  179.720300\n","2867      NaN        NaN        NaN  179.778900\n","2868      NaN        NaN        NaN  179.836700\n","2869      NaN        NaN        NaN  179.895000\n","\n","[2870 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM     REPM(LQH)  REPM(LSE)     RSQO\n","0     4.698500  1.621300e+00   1.693000  7.36340\n","1     2.070100  5.014100e-04   0.076667  1.17330\n","2     0.605570  1.572600e-04   0.037740  1.19160\n","3     0.172560  1.302700e-04   0.019022  0.41904\n","4     0.062023  1.256900e-05   0.005862  0.14002\n","...        ...           ...        ...      ...\n","6483       NaN  5.293700e-07        NaN      NaN\n","6484       NaN  4.281300e-07        NaN      NaN\n","6485       NaN  4.528700e-07        NaN      NaN\n","6486       NaN  8.592500e-07        NaN      NaN\n","6487       NaN  4.146900e-07        NaN      NaN\n","\n","[6488 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.00000    0.00000    0.00000  0.000031\n","1     0.92554    0.29494    0.22538  0.120900\n","2     1.28010    0.31093    0.45674  0.230230\n","3     2.50060    0.32896    0.82157  0.344720\n","4     2.68990    0.38003    1.31270  0.453220\n","...       ...        ...        ...       ...\n","6483      NaN  175.64540        NaN       NaN\n","6484      NaN  175.67350        NaN       NaN\n","6485      NaN  175.70050        NaN       NaN\n","6486      NaN  175.72680        NaN       NaN\n","6487      NaN  175.75670        NaN       NaN\n","\n","[6488 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0    4.87730   0.515210   1.382200  9.448000e+00\n","1    2.30880   0.036584   0.109210  2.140666e+09\n","2    0.67092   0.033253   0.061498  5.089714e+06\n","3    0.33257   0.031412   0.042972  4.332556e+06\n","4    0.15795   0.030381   0.036073  6.277289e+06\n","..       ...        ...        ...           ...\n","644      NaN   0.041430        NaN           NaN\n","645      NaN   0.041426        NaN           NaN\n","646      NaN   0.041425        NaN           NaN\n","647      NaN   0.041589        NaN           NaN\n","648      NaN   0.041407        NaN           NaN\n","\n","[649 rows x 4 columns]\n","       RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0    0.0000    0.00000     0.0000  0.000031\n","1    1.5875    0.18595     2.0949  0.456370\n","2    2.7807    1.76750     4.1164  0.881370\n","3    4.2157    3.36020     6.3059  1.381000\n","4    5.7782    4.97580     8.3592  2.163900\n","..      ...        ...        ...       ...\n","644     NaN  177.65660        NaN       NaN\n","645     NaN  177.69900        NaN       NaN\n","646     NaN  177.73470        NaN       NaN\n","647     NaN  179.34220        NaN       NaN\n","648     NaN  179.38420        NaN       NaN\n","\n","[649 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     4.91710   0.385200   0.909050  8.689200\n","1     2.09830   0.040639   0.073359  0.381170\n","2     0.81527   0.039056   0.033063  0.144900\n","3     0.24609   0.037539   0.018423  0.087866\n","4     0.10034   0.036240   0.012570  0.101790\n","...       ...        ...        ...       ...\n","1949      NaN   0.000542        NaN       NaN\n","1950      NaN   0.000189        NaN       NaN\n","1951      NaN   0.000714        NaN       NaN\n","1952      NaN   0.000159        NaN       NaN\n","1953      NaN   0.000584        NaN       NaN\n","\n","[1954 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000    0.00000     0.0000  0.000031\n","1     1.5595    0.80465     2.4044  0.324360\n","2     2.9504    1.16420     4.7806  0.696140\n","3     4.7543    1.67070     7.0729  1.048600\n","4     6.6020    2.90470     9.7160  1.398200\n","...      ...        ...        ...       ...\n","1949     NaN  177.55980        NaN       NaN\n","1950     NaN  177.60510        NaN       NaN\n","1951     NaN  177.65060        NaN       NaN\n","1952     NaN  177.69810        NaN       NaN\n","1953     NaN  177.73910        NaN       NaN\n","\n","[1954 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     5.005100   1.346300   1.527900  5.848900\n","1     2.186800   0.005788   0.023455  0.868410\n","2     0.515280   0.003547   0.010244  0.151910\n","3     0.124590   0.002518   0.004157  0.066932\n","4     0.030662   0.001769   0.001350  0.024569\n","...        ...        ...        ...       ...\n","7345       NaN   0.000004        NaN       NaN\n","7346       NaN   0.000005        NaN       NaN\n","7347       NaN   0.000005        NaN       NaN\n","7348       NaN   0.000005        NaN       NaN\n","7349       NaN   0.000004        NaN       NaN\n","\n","[7350 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.00000    0.00000     0.0000  0.000030\n","1     0.88441    0.11623     1.3998  0.080304\n","2     1.96000    0.41760     2.1954  0.164780\n","3     2.35710    0.45223     2.7257  0.250080\n","4     3.64680    0.54535     4.1767  0.334250\n","...       ...        ...        ...       ...\n","7345      NaN  176.02620        NaN       NaN\n","7346      NaN  176.04920        NaN       NaN\n","7347      NaN  176.07240        NaN       NaN\n","7348      NaN  176.09520        NaN       NaN\n","7349      NaN  176.11880        NaN       NaN\n","\n","[7350 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM     REPM(LQH)  REPM(LSE)     RSQO\n","0     5.689200  2.043300e+00   2.205500  7.73420\n","1     2.318700  1.713600e-03   0.014816  0.90238\n","2     0.566560  1.420400e-03   0.004815  0.25958\n","3     0.129830  1.278800e-03   0.002694  0.16040\n","4     0.035477  1.166000e-03   0.001758  0.07995\n","...        ...           ...        ...      ...\n","5594       NaN  3.016500e-06        NaN      NaN\n","5595       NaN  3.753400e-07        NaN      NaN\n","5596       NaN  3.832800e-07        NaN      NaN\n","5597       NaN  3.086500e-07        NaN      NaN\n","5598       NaN  7.139200e-07        NaN      NaN\n","\n","[5599 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000    0.00000     0.0000  0.000035\n","1     1.0377    0.48662     1.8678  0.176870\n","2     2.2782    0.52240     2.8877  0.349970\n","3     3.7975    0.64775     3.3779  0.534090\n","4     5.3303    0.77347     5.1927  0.705560\n","...      ...        ...        ...       ...\n","5594     NaN  175.50790        NaN       NaN\n","5595     NaN  175.53780        NaN       NaN\n","5596     NaN  175.56610        NaN       NaN\n","5597     NaN  175.59510        NaN       NaN\n","5598     NaN  175.61890        NaN       NaN\n","\n","[5599 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     5.64730   0.881020   1.285000  8.01180\n","1     2.66640   0.003489   0.025276  0.86653\n","2     0.71456   0.002751   0.007804  0.53669\n","3     0.17400   0.002139   0.003224  0.37240\n","4     0.11896   0.001617   0.002015  0.31418\n","...       ...        ...        ...      ...\n","2531      NaN   0.000117        NaN      NaN\n","2532      NaN   0.000187        NaN      NaN\n","2533      NaN   0.000099        NaN      NaN\n","2534      NaN   0.000912        NaN      NaN\n","2535      NaN   0.000103        NaN      NaN\n","\n","[2536 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000     0.0000     0.0000  0.000032\n","1     1.5598     1.4974     2.0858  0.311020\n","2     3.1764     1.6228     3.1762  0.626590\n","3     5.1074     1.8899     4.7195  0.943110\n","4     6.8038     3.6490     6.3122  1.254900\n","...      ...        ...        ...       ...\n","2531     NaN   177.1527        NaN       NaN\n","2532     NaN   177.1927        NaN       NaN\n","2533     NaN   177.2381        NaN       NaN\n","2534     NaN   177.2751        NaN       NaN\n","2535     NaN   177.3212        NaN       NaN\n","\n","[2536 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     6.348100   0.398640   0.866290  9.48260\n","1     2.698600   0.002064   0.058431  0.47220\n","2     0.773660   0.001146   0.023299  0.17855\n","3     0.202430   0.000965   0.011522  0.13282\n","4     0.059909   0.000522   0.004392  0.10520\n","...        ...        ...        ...      ...\n","3428       NaN   0.000012        NaN      NaN\n","3429       NaN   0.000031        NaN      NaN\n","3430       NaN   0.000012        NaN      NaN\n","3431       NaN   0.000025        NaN      NaN\n","3432       NaN   0.000012        NaN      NaN\n","\n","[3433 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     0.0000     0.0000     0.0000  0.00003\n","1     1.5942     1.4657     2.3317  0.46897\n","2     2.9677     2.6080     4.8120  0.92153\n","3     4.6527     4.2617     7.1579  1.35470\n","4     6.3479     5.6341     9.7372  1.78890\n","...      ...        ...        ...      ...\n","3428     NaN   176.1222        NaN      NaN\n","3429     NaN   176.1611        NaN      NaN\n","3430     NaN   176.2050        NaN      NaN\n","3431     NaN   176.2439        NaN      NaN\n","3432     NaN   176.2913        NaN      NaN\n","\n","[3433 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM     REPM(LQH)  REPM(LSE)      RSQO\n","0     4.023200  6.896500e-01   1.176800  4.936800\n","1     1.665400  1.925700e-04   0.080852  0.558130\n","2     0.413280  2.666600e-04   0.041409  0.271360\n","3     0.157380  9.227300e-05   0.019245  0.286940\n","4     0.038677  4.460000e-05   0.007844  0.076058\n","...        ...           ...        ...       ...\n","8594       NaN  3.313000e-07        NaN       NaN\n","8595       NaN  2.353700e-07        NaN       NaN\n","8596       NaN  2.121900e-07        NaN       NaN\n","8597       NaN  5.433000e-07        NaN       NaN\n","8598       NaN  2.085500e-07        NaN       NaN\n","\n","[8599 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.00000    0.00000     0.0000  0.000069\n","1     0.76139    0.12394     1.3842  0.067753\n","2     1.72950    0.12886     1.6454  0.141650\n","3     2.77270    0.14164     1.9497  0.215720\n","4     2.84270    0.16807     2.2536  0.287970\n","...       ...        ...        ...       ...\n","8594      NaN  175.70230        NaN       NaN\n","8595      NaN  175.72340        NaN       NaN\n","8596      NaN  175.74400        NaN       NaN\n","8597      NaN  175.76320        NaN       NaN\n","8598      NaN  175.78510        NaN       NaN\n","\n","[8599 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     5.078700   1.102900   1.619800  6.98220\n","1     1.758000   0.009189   0.057646  0.62732\n","2     0.549860   0.006688   0.026565  0.30180\n","3     0.149980   0.004898   0.017926  0.23066\n","4     0.041787   0.003512   0.015823  0.12057\n","...        ...        ...        ...      ...\n","5738       NaN   0.000010        NaN      NaN\n","5739       NaN   0.000010        NaN      NaN\n","5740       NaN   0.000008        NaN      NaN\n","5741       NaN   0.000011        NaN      NaN\n","5742       NaN   0.000016        NaN      NaN\n","\n","[5743 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000     0.0000     0.0000  0.000031\n","1     1.0409     1.3102     1.5411  0.120680\n","2     2.3085     1.5239     3.1392  0.257060\n","3     3.3533     2.1572     4.8015  0.378820\n","4     4.5757     2.4374     6.4225  0.504340\n","...      ...        ...        ...       ...\n","5738     NaN   175.9638        NaN       NaN\n","5739     NaN   175.9902        NaN       NaN\n","5740     NaN   176.0166        NaN       NaN\n","5741     NaN   176.0399        NaN       NaN\n","5742     NaN   176.0727        NaN       NaN\n","\n","[5743 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM     REPM(LQH)  REPM(LSE)     RSQO\n","0     5.93810  9.521000e-01   2.316700  7.84020\n","1     1.79120  3.113200e-04   0.083713  0.54104\n","2     0.44737  2.635300e-04   0.044914  0.41173\n","3     0.19370  1.335300e-04   0.024445  0.24067\n","4     0.14658  4.206400e-05   0.012497  0.11800\n","...       ...           ...        ...      ...\n","5399      NaN  3.975500e-07        NaN      NaN\n","5400      NaN  3.202300e-06        NaN      NaN\n","5401      NaN  5.740600e-07        NaN      NaN\n","5402      NaN  1.372600e-06        NaN      NaN\n","5403      NaN  4.042500e-07        NaN      NaN\n","\n","[5404 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000    0.00000     0.0000  0.000031\n","1     1.2003    0.96880     1.8685  0.217280\n","2     2.3591    0.98486     3.8444  0.434780\n","3     3.3987    1.18570     5.9993  0.654170\n","4     4.7042    1.55140     7.9262  0.834950\n","...      ...        ...        ...       ...\n","5399     NaN  175.28390        NaN       NaN\n","5400     NaN  175.31240        NaN       NaN\n","5401     NaN  175.34710        NaN       NaN\n","5402     NaN  175.37650        NaN       NaN\n","5403     NaN  175.41200        NaN       NaN\n","\n","[5404 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     5.153900   0.948910   1.589800  8.777000\n","1     2.067700   0.078930   0.129010  0.708780\n","2     0.740650   0.065469   0.078634  0.244790\n","3     0.335320   0.055011   0.045409  0.073456\n","4     0.041492   0.047368   0.024790  0.036249\n","...        ...        ...        ...       ...\n","1592       NaN        NaN   0.000060       NaN\n","1593       NaN        NaN   0.000069       NaN\n","1594       NaN        NaN   0.000051       NaN\n","1595       NaN        NaN   0.000138       NaN\n","1596       NaN        NaN   0.000053       NaN\n","\n","[1597 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000    0.00000     0.0000  0.000032\n","1     1.5083    0.53849     2.5221  0.325860\n","2     3.1053    1.05540     4.9828  0.608230\n","3     4.7294    1.81820     7.2661  0.907610\n","4     6.0916    2.77080     9.5285  1.206600\n","...      ...        ...        ...       ...\n","1592     NaN        NaN   177.9741       NaN\n","1593     NaN        NaN   178.0285       NaN\n","1594     NaN        NaN   178.0840       NaN\n","1595     NaN        NaN   178.1406       NaN\n","1596     NaN        NaN   178.1975       NaN\n","\n","[1597 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM     REPM(LQH)  REPM(LSE)      RSQO\n","0     5.492400  1.283800e+00   1.847600  6.601700\n","1     1.947100  6.615000e-04   0.021233  0.257970\n","2     0.438160  2.065300e-04   0.007267  0.042124\n","3     0.109340  1.230900e-04   0.002021  0.014524\n","4     0.031485  4.175200e-05   0.000267  0.006656\n","...        ...           ...        ...       ...\n","7719       NaN  5.211300e-07        NaN       NaN\n","7720       NaN  1.589200e-06        NaN       NaN\n","7721       NaN  5.958100e-07        NaN       NaN\n","7722       NaN  1.047900e-06        NaN       NaN\n","7723       NaN  4.588200e-07        NaN       NaN\n","\n","[7724 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000    0.00000    0.00000  0.000029\n","1     0.8320    0.25479    0.40470  0.086718\n","2     1.8630    0.27665    0.47192  0.169480\n","3     1.8990    0.29166    0.59918  0.250470\n","4     2.2877    0.35528    1.52450  0.351900\n","...      ...        ...        ...       ...\n","7719     NaN  175.86710        NaN       NaN\n","7720     NaN  175.88730        NaN       NaN\n","7721     NaN  175.91410        NaN       NaN\n","7722     NaN  175.93510        NaN       NaN\n","7723     NaN  175.95800        NaN       NaN\n","\n","[7724 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     5.33280   0.744290   1.114400  7.14290\n","1     2.16520   0.004597   0.035250  0.49635\n","2     0.57003   0.003167   0.012859  0.31585\n","3     0.15331   0.002336   0.004509  0.19256\n","4     0.04853   0.001672   0.000984  0.20606\n","...       ...        ...        ...      ...\n","5574      NaN   0.000002        NaN      NaN\n","5575      NaN   0.000003        NaN      NaN\n","5576      NaN   0.000003        NaN      NaN\n","5577      NaN   0.000003        NaN      NaN\n","5578      NaN   0.000003        NaN      NaN\n","\n","[5579 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000    0.00000    0.00000  0.000032\n","1     1.1160    0.20241    0.92872  0.179110\n","2     1.8258    0.62946    1.39060  0.364260\n","3     3.3175    0.70473    3.14040  0.544640\n","4     4.7984    1.09630    4.82430  0.700210\n","...      ...        ...        ...       ...\n","5574     NaN  168.94040        NaN       NaN\n","5575     NaN  168.96740        NaN       NaN\n","5576     NaN  168.99760        NaN       NaN\n","5577     NaN  169.04030        NaN       NaN\n","5578     NaN  169.09080        NaN       NaN\n","\n","[5579 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     6.130500   1.534200   2.229700  8.32940\n","1     2.326900   0.004901   0.033627  1.35550\n","2     0.675620   0.002613   0.013247  0.41761\n","3     0.178610   0.002368   0.003901  0.26909\n","4     0.051013   0.001437   0.002038  0.23169\n","...        ...        ...        ...      ...\n","4209       NaN   0.000011        NaN      NaN\n","4210       NaN   0.000061        NaN      NaN\n","4211       NaN   0.000012        NaN      NaN\n","4212       NaN   0.000011        NaN      NaN\n","4213       NaN   0.000012        NaN      NaN\n","\n","[4214 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000     0.0000    0.00000  0.000034\n","1     1.2977     1.5176    0.91697  0.324520\n","2     2.6133     2.9707    2.09820  0.650430\n","3     3.9736     4.3859    3.09130  0.950960\n","4     5.3651     5.8411    5.04500  1.264500\n","...      ...        ...        ...       ...\n","4209     NaN   175.9396        NaN       NaN\n","4210     NaN   175.9754        NaN       NaN\n","4211     NaN   176.0117        NaN       NaN\n","4212     NaN   176.0459        NaN       NaN\n","4213     NaN   176.0790        NaN       NaN\n","\n","[4214 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     6.280100   1.768900   2.145900  9.43920\n","1     2.567400   0.010614   0.087563  1.71430\n","2     0.727170   0.007713   0.042464  0.83957\n","3     0.216580   0.006255   0.023033  0.31183\n","4     0.093063   0.004956   0.031440  0.13305\n","...        ...        ...        ...      ...\n","2839       NaN   0.000027        NaN      NaN\n","2840       NaN   0.000084        NaN      NaN\n","2841       NaN   0.000028        NaN      NaN\n","2842       NaN   0.000105        NaN      NaN\n","2843       NaN   0.000028        NaN      NaN\n","\n","[2844 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000     0.0000     0.0000  0.000032\n","1     1.6151     1.7415     2.3703  0.440230\n","2     3.1242     2.9645     4.9692  0.870140\n","3     4.8122     4.2046     7.3581  1.310000\n","4     6.5067     5.8017     9.9496  1.758700\n","...      ...        ...        ...       ...\n","2839     NaN   176.7848        NaN       NaN\n","2840     NaN   176.8237        NaN       NaN\n","2841     NaN   176.8675        NaN       NaN\n","2842     NaN   176.9063        NaN       NaN\n","2843     NaN   176.9501        NaN       NaN\n","\n","[2844 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM     REPM(LQH)  REPM(LSE)     RSQO\n","0     3.824200  1.129700e+00   1.646500  5.88430\n","1     1.242500  6.475400e-04   0.041200  0.99823\n","2     0.346440  3.006800e-04   0.020573  0.35213\n","3     0.102210  1.183500e-04   0.012540  0.39369\n","4     0.034601  2.408000e-05   0.018498  0.17425\n","...        ...           ...        ...      ...\n","9052       NaN  3.017300e-07        NaN      NaN\n","9053       NaN  8.366200e-08        NaN      NaN\n","9054       NaN  5.721200e-07        NaN      NaN\n","9055       NaN  1.091000e-07        NaN      NaN\n","9056       NaN  2.533600e-07        NaN      NaN\n","\n","[9057 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.00000    0.00000     0.0000  0.000064\n","1     0.80062    0.38480     1.2853  0.075067\n","2     1.55350    0.39812     2.5879  0.154650\n","3     2.37570    0.42794     2.8747  0.247070\n","4     3.47930    0.47433     4.2935  0.311860\n","...       ...        ...        ...       ...\n","9052      NaN  175.48680        NaN       NaN\n","9053      NaN  175.50710        NaN       NaN\n","9054      NaN  175.52400        NaN       NaN\n","9055      NaN  175.54410        NaN       NaN\n","9056      NaN  175.56260        NaN       NaN\n","\n","[9057 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     6.53630   1.126700   2.649100  7.09160\n","1     1.68150   0.000766   0.086461  3.60710\n","2     0.38247   0.000383   0.048008  0.66556\n","3     0.12545   0.000205   0.024808  0.15733\n","4     0.06715   0.000143   0.011973  0.05416\n","...       ...        ...        ...      ...\n","6547      NaN   0.000008        NaN      NaN\n","6548      NaN   0.000006        NaN      NaN\n","6549      NaN   0.000007        NaN      NaN\n","6550      NaN   0.000006        NaN      NaN\n","6551      NaN   0.000006        NaN      NaN\n","\n","[6552 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000    0.00000     0.0000  0.000042\n","1     0.9571    0.43091     1.5820  0.150520\n","2     2.2652    0.50813     2.0240  0.267070\n","3     2.4605    0.78596     2.5677  0.384210\n","4     2.6823    0.92753     3.4132  0.493830\n","...      ...        ...        ...       ...\n","6547     NaN  175.58540        NaN       NaN\n","6548     NaN  175.61170        NaN       NaN\n","6549     NaN  175.63630        NaN       NaN\n","6550     NaN  175.66290        NaN       NaN\n","6551     NaN  175.68750        NaN       NaN\n","\n","[6552 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     6.120200   1.368800   2.500600  9.18470\n","1     1.471600   0.011431   0.038804  0.88093\n","2     0.474550   0.008453   0.017918  0.48002\n","3     0.113300   0.006138   0.009010  0.47634\n","4     0.027688   0.004419   0.004460  0.44059\n","...        ...        ...        ...      ...\n","3760       NaN   0.000035        NaN      NaN\n","3761       NaN   0.000273        NaN      NaN\n","3762       NaN   0.000047        NaN      NaN\n","3763       NaN   0.000090        NaN      NaN\n","3764       NaN   0.000034        NaN      NaN\n","\n","[3765 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     0.0000    0.00000     0.0000  0.00003\n","1     1.2971    0.92194     1.9539  0.23653\n","2     2.5366    1.19770     4.0813  0.44790\n","3     3.9179    1.56290     6.1183  0.67023\n","4     5.2577    2.95410     8.0900  0.87081\n","...      ...        ...        ...      ...\n","3760     NaN  176.22840        NaN      NaN\n","3761     NaN  176.25530        NaN      NaN\n","3762     NaN  176.28700        NaN      NaN\n","3763     NaN  176.31610        NaN      NaN\n","3764     NaN  176.34790        NaN      NaN\n","\n","[3765 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM     REPM(LQH)  REPM(LSE)     RSQO\n","0     7.753900  9.583000e-01   2.677300  9.16510\n","1     1.972500  7.414600e-04   0.118260  1.08790\n","2     0.669180  3.125900e-04   0.049839  0.50962\n","3     0.219390  1.135800e-04   0.018010  0.17107\n","4     0.081224  3.524600e-05   0.005222  0.14063\n","...        ...           ...        ...      ...\n","4629       NaN  1.286900e-07        NaN      NaN\n","4630       NaN  1.226700e-07        NaN      NaN\n","4631       NaN  5.765200e-07        NaN      NaN\n","4632       NaN  1.274600e-07        NaN      NaN\n","4633       NaN  1.809200e-07        NaN      NaN\n","\n","[4634 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     0.0000    0.00000    0.00000  0.00003\n","1     1.8004    0.40832    0.27812  0.31439\n","2     3.2326    0.44565    0.73786  0.60690\n","3     4.6802    0.51196    1.10720  0.91830\n","4     6.1233    0.76625    1.98890  1.24700\n","...      ...        ...        ...      ...\n","4629     NaN  174.77400        NaN      NaN\n","4630     NaN  174.81370        NaN      NaN\n","4631     NaN  174.84500        NaN      NaN\n","4632     NaN  174.88190        NaN      NaN\n","4633     NaN  174.92160        NaN      NaN\n","\n","[4634 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)     REPM(LSE)      RSQO\n","0     4.915100   1.677000  2.253600e+00  6.524200\n","1     1.534200   0.005483  3.318300e-02  1.419200\n","2     0.373590   0.003907  1.397400e-02  0.163450\n","3     0.100320   0.002749  4.697500e-03  0.214130\n","4     0.025007   0.001922  1.023500e-03  0.037671\n","...        ...        ...           ...       ...\n","6532       NaN        NaN  1.977400e-07       NaN\n","6533       NaN        NaN  5.025700e-07       NaN\n","6534       NaN        NaN  1.910900e-07       NaN\n","6535       NaN        NaN  6.286500e-07       NaN\n","6536       NaN        NaN  2.081800e-07       NaN\n","\n","[6537 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000    0.00000    0.00000  0.000032\n","1     1.0091    0.26550    0.47554  0.088330\n","2     1.0949    0.28202    0.58798  0.182880\n","3     1.1567    0.30793    1.40030  0.271270\n","4     1.2256    0.36900    1.72390  0.352830\n","...      ...        ...        ...       ...\n","6532     NaN        NaN  176.42540       NaN\n","6533     NaN        NaN  176.45400       NaN\n","6534     NaN        NaN  176.48180       NaN\n","6535     NaN        NaN  176.50430       NaN\n","6536     NaN        NaN  176.53160       NaN\n","\n","[6537 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM     REPM(LQH)  REPM(LSE)     RSQO\n","0     6.034700  1.619900e+00   2.492200  8.09440\n","1     1.756900  1.509500e-03   0.046825  1.37620\n","2     0.368330  8.371300e-04   0.019556  0.45310\n","3     0.090789  1.336800e-04   0.008096  0.37216\n","4     0.023608  3.319800e-05   0.003259  0.30491\n","...        ...           ...        ...      ...\n","6397       NaN  3.399400e-06        NaN      NaN\n","6398       NaN  5.603600e-07        NaN      NaN\n","6399       NaN  6.481500e-07        NaN      NaN\n","6400       NaN  5.852600e-07        NaN      NaN\n","6401       NaN  5.364300e-07        NaN      NaN\n","\n","[6402 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000    0.00000     0.0000  0.000105\n","1     1.0560    0.64464     1.7633  0.181270\n","2     2.3310    1.30790     3.5358  0.359600\n","3     2.6887    1.98790     5.2212  0.549270\n","4     3.9479    2.35980     6.9030  0.711080\n","...      ...        ...        ...       ...\n","6397     NaN  175.34970        NaN       NaN\n","6398     NaN  175.37780        NaN       NaN\n","6399     NaN  175.40130        NaN       NaN\n","6400     NaN  175.42950        NaN       NaN\n","6401     NaN  175.45970        NaN       NaN\n","\n","[6402 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     7.608600   1.674800   2.732200  9.14220\n","1     1.907600   0.001093   0.055033  1.28130\n","2     0.457000   0.000629   0.023478  0.44606\n","3     0.104730   0.000120   0.009950  0.32894\n","4     0.025001   0.000059   0.004326  0.40475\n","...        ...        ...        ...      ...\n","5116       NaN   0.000003        NaN      NaN\n","5117       NaN   0.000002        NaN      NaN\n","5118       NaN   0.000002        NaN      NaN\n","5119       NaN   0.000009        NaN      NaN\n","5120       NaN   0.000003        NaN      NaN\n","\n","[5121 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000    0.00000     0.0000  0.000031\n","1     1.3184    0.38021     1.9614  0.287820\n","2     2.7723    0.51332     4.0374  0.557000\n","3     4.1211    1.21150     6.0983  0.847610\n","4     5.5564    1.27900     8.2109  1.128200\n","...      ...        ...        ...       ...\n","5116     NaN  175.51000        NaN       NaN\n","5117     NaN  175.54120        NaN       NaN\n","5118     NaN  175.57260        NaN       NaN\n","5119     NaN  175.59770        NaN       NaN\n","5120     NaN  175.62980        NaN       NaN\n","\n","[5121 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     6.690300   1.917600   2.414300  10.54160\n","1     2.170600   0.014240   0.063005   1.16550\n","2     0.581320   0.008201   0.025761   0.66710\n","3     0.188960   0.005475   0.010995   0.58795\n","4     0.056543   0.004008   0.005507   0.55446\n","...        ...        ...        ...       ...\n","3250       NaN   0.000140        NaN       NaN\n","3251       NaN   0.000057        NaN       NaN\n","3252       NaN   0.000017        NaN       NaN\n","3253       NaN   0.000013        NaN       NaN\n","3254       NaN   0.000010        NaN       NaN\n","\n","[3255 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000     0.0000     0.0000  0.000032\n","1     1.7911     1.6362     2.8523  0.514640\n","2     3.2734     3.4088     5.5841  0.999900\n","3     4.9564     5.1636     8.1963  1.492600\n","4     6.4982     6.9413    10.8388  1.971700\n","...      ...        ...        ...       ...\n","3250     NaN   176.0858        NaN       NaN\n","3251     NaN   176.1362        NaN       NaN\n","3252     NaN   176.1886        NaN       NaN\n","3253     NaN   176.2406        NaN       NaN\n","3254     NaN   176.2890        NaN       NaN\n","\n","[3255 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["              RALM  REPM(LQH)  REPM(LSE)     RSQO\n","0     4.573100e+00   1.980600   2.324800  7.25690\n","1     6.569600e-01   0.000914   0.040499  1.42960\n","2     2.860600e-04   0.000283   0.017605  1.26680\n","3     6.310000e-05   0.000071   0.005573  0.51907\n","4     1.532400e-05   0.000028   0.000975  0.71555\n","...            ...        ...        ...      ...\n","5594  4.707700e-14        NaN        NaN      NaN\n","5595  4.798900e-14        NaN        NaN      NaN\n","5596  4.900600e-14        NaN        NaN      NaN\n","5597  4.929500e-14        NaN        NaN      NaN\n","5598  4.929500e-14        NaN        NaN      NaN\n","\n","[5599 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["           RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0      0.000000   0.000000    0.00000  0.000164\n","1      0.074736   0.041919    0.89001  0.088355\n","2      0.159230   0.112930    0.97550  0.159370\n","3      0.177160   0.117810    1.06130  0.221770\n","4      0.460650   0.138390    1.14680  0.290230\n","...         ...        ...        ...       ...\n","5594  40.442900        NaN        NaN       NaN\n","5595  40.449700        NaN        NaN       NaN\n","5596  40.456500        NaN        NaN       NaN\n","5597  40.478100        NaN        NaN       NaN\n","5598  40.514100        NaN        NaN       NaN\n","\n","[5599 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)     REPM(LSE)     RSQO\n","0     6.300600   1.802600  3.190200e+00  8.25470\n","1     0.989800   0.000753  4.578000e-02  1.57800\n","2     0.000576   0.000229  1.727700e-02  0.99618\n","3     0.000060   0.000111  5.570000e-03  0.45877\n","4     0.000046   0.000022  1.252100e-03  0.31302\n","...        ...        ...           ...      ...\n","8553       NaN        NaN  1.254600e-10      NaN\n","8554       NaN        NaN  1.254300e-10      NaN\n","8555       NaN        NaN  1.253900e-10      NaN\n","8556       NaN        NaN  1.253600e-10      NaN\n","8557       NaN        NaN  1.253200e-10      NaN\n","\n","[8558 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000   0.000000     0.0000  0.000033\n","1     1.2639   0.059224     1.3271  0.135420\n","2     2.3712   0.140490     1.5585  0.270420\n","3     2.4427   0.146680     1.8508  0.388880\n","4     2.4500   0.160210     2.0993  0.516020\n","...      ...        ...        ...       ...\n","8553     NaN        NaN   174.3905       NaN\n","8554     NaN        NaN   174.4116       NaN\n","8555     NaN        NaN   174.4295       NaN\n","8556     NaN        NaN   174.4472       NaN\n","8557     NaN        NaN   174.4668       NaN\n","\n","[8558 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["         RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0    8.331200   2.436700   4.115500  1.034600e+01\n","1    0.909020   0.000993   0.059329  6.627700e+00\n","2    0.007718   0.000204   0.029135  1.807400e+00\n","3    0.002334   0.000085   0.013484  1.048900e+00\n","4    0.000403   0.000035   0.005679  7.383000e-01\n","..        ...        ...        ...           ...\n","853       NaN        NaN        NaN  4.979800e-07\n","854       NaN        NaN        NaN  4.976100e-07\n","855       NaN        NaN        NaN  4.972400e-07\n","856       NaN        NaN        NaN  4.968800e-07\n","857       NaN        NaN        NaN  4.965100e-07\n","\n","[858 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["       RALM  REPM(LQH)  REPM(LSE)        RSQO\n","0    0.0000    0.00000     0.0000    0.000029\n","1    1.7107    0.19659     1.7643    0.202470\n","2    2.8867    0.29666     3.7025    0.407910\n","3    4.0442    0.33509     6.0219    0.604110\n","4    5.3359    0.36400     8.1562    0.816530\n","..      ...        ...        ...         ...\n","853     NaN        NaN        NaN  179.026700\n","854     NaN        NaN        NaN  179.247100\n","855     NaN        NaN        NaN  179.458300\n","856     NaN        NaN        NaN  179.672100\n","857     NaN        NaN        NaN  179.887300\n","\n","[858 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)     REPM(LSE)      RSQO\n","0     8.996000   2.401700  3.933900e+00  11.41850\n","1     1.403700   0.000852  1.006300e-01   5.45050\n","2     0.015286   0.000327  4.991000e-02   0.94633\n","3     0.005433   0.000129  2.326400e-02   0.42182\n","4     0.001682   0.000033  1.003200e-02   0.31553\n","...        ...        ...           ...       ...\n","2123       NaN        NaN  6.061600e-14       NaN\n","2124       NaN        NaN  6.669900e-14       NaN\n","2125       NaN        NaN  6.054000e-14       NaN\n","2126       NaN        NaN  6.383300e-14       NaN\n","2127       NaN        NaN  6.383300e-14       NaN\n","\n","[2128 rows x 4 columns]\n","        RALM  REPM(LQH)  REPM(LSE)      RSQO\n","0     0.0000   0.000000     0.0000  0.000031\n","1     1.8376   0.091954     2.2662  0.361050\n","2     2.8702   0.104610     2.9692  0.645610\n","3     4.1325   0.186510     5.5234  0.954230\n","4     5.2238   0.208030     7.8524  1.274200\n","...      ...        ...        ...       ...\n","2123     NaN        NaN    88.9879       NaN\n","2124     NaN        NaN    89.0230       NaN\n","2125     NaN        NaN    89.0606       NaN\n","2126     NaN        NaN    89.1212       NaN\n","2127     NaN        NaN    89.2063       NaN\n","\n","[2128 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0     5.736500   2.450200   3.320800  7.599200e+00\n","1     0.863980   0.000617   0.039567  7.014600e+00\n","2     0.000264   0.000289   0.015472  3.349500e-01\n","3     0.000074   0.000050   0.004639  1.644400e-01\n","4     0.000019   0.000050   0.000785  2.790900e-01\n","...        ...        ...        ...           ...\n","2186       NaN        NaN        NaN  2.350000e-10\n","2187       NaN        NaN        NaN  2.348900e-10\n","2188       NaN        NaN        NaN  2.347800e-10\n","2189       NaN        NaN        NaN  2.346800e-10\n","2190       NaN        NaN        NaN  2.345700e-10\n","\n","[2191 rows x 4 columns]\n","         RALM  REPM(LQH)  REPM(LSE)        RSQO\n","0     0.00000   0.000000    0.00000    0.000030\n","1     0.19929   0.034340    0.11288    0.091931\n","2     0.83294   0.050732    0.18789    0.175980\n","3     0.83843   0.084473    0.24313    0.256540\n","4     0.84874   0.087746    0.27184    0.355310\n","...       ...        ...        ...         ...\n","2186      NaN        NaN        NaN  179.597800\n","2187      NaN        NaN        NaN  179.677300\n","2188      NaN        NaN        NaN  179.761000\n","2189      NaN        NaN        NaN  179.844800\n","2190      NaN        NaN        NaN  179.928400\n","\n","[2191 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0     8.478900   3.839700   5.024900  1.028350e+01\n","1     0.857290   0.000981   0.039868  4.251400e+00\n","2     0.009065   0.000367   0.017900  1.883700e+00\n","3     0.000057   0.000116   0.008806  1.719400e+00\n","4     0.000008   0.000045   0.004588  8.589000e-01\n","...        ...        ...        ...           ...\n","1083       NaN        NaN        NaN  8.529000e-10\n","1084       NaN        NaN        NaN  8.528700e-10\n","1085       NaN        NaN        NaN  8.528400e-10\n","1086       NaN        NaN        NaN  8.528100e-10\n","1087       NaN        NaN        NaN  8.527900e-10\n","\n","[1088 rows x 4 columns]\n","        RALM  REPM(LQH)  REPM(LSE)        RSQO\n","0     0.0000    0.00000     0.0000    0.000029\n","1     1.1809    0.20172     1.5788    0.156080\n","2     1.5653    0.57947     1.8964    0.325660\n","3     1.6696    0.62743     2.0194    0.524280\n","4     1.6774    0.80275     2.8549    0.700000\n","...      ...        ...        ...         ...\n","1083     NaN        NaN        NaN  179.262700\n","1084     NaN        NaN        NaN  179.420600\n","1085     NaN        NaN        NaN  179.570100\n","1086     NaN        NaN        NaN  179.746300\n","1087     NaN        NaN        NaN  179.908700\n","\n","[1088 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0    11.320900   4.888200   6.679700  1.278160e+01\n","1     0.859550   0.000977   0.019815  8.378700e+00\n","2     0.000356   0.000147   0.003836  1.758000e+00\n","3     0.000573   0.000132   0.000533  2.555700e+00\n","4     0.000028   0.000030   0.000136  1.422900e+00\n","..         ...        ...        ...           ...\n","660        NaN        NaN        NaN  1.893100e-07\n","661        NaN        NaN        NaN  1.891100e-07\n","662        NaN        NaN        NaN  1.889100e-07\n","663        NaN        NaN        NaN  1.887100e-07\n","664        NaN        NaN        NaN  1.885000e-07\n","\n","[665 rows x 4 columns]\n","       RALM  REPM(LQH)  REPM(LSE)        RSQO\n","0    0.0000    0.00000     0.0000    0.000028\n","1    1.7650    0.36785     1.9519    0.295040\n","2    2.8807    1.13170     3.4340    0.577020\n","3    3.9332    1.15550     5.3315    0.841130\n","4    4.5327    1.91560     6.3522    1.111800\n","..      ...        ...        ...         ...\n","660     NaN        NaN        NaN  178.683900\n","661     NaN        NaN        NaN  178.955500\n","662     NaN        NaN        NaN  179.226100\n","663     NaN        NaN        NaN  179.516500\n","664     NaN        NaN        NaN  179.770200\n","\n","[665 rows x 4 columns]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n","/usr/local/lib/python3.6/dist-packages/pandas/core/frame.py:4308: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"stream","text":["          RALM  REPM(LQH)  REPM(LSE)          RSQO\n","0    10.643000   3.375400   5.013900  1.260080e+01\n","1     1.043900   0.000690   0.032536  3.655500e+00\n","2     0.001209   0.000236   0.008432  1.574100e+00\n","3     0.000623   0.000109   0.001304  1.151200e+00\n","4     0.000481   0.000045   0.000150  8.456900e-01\n","..         ...        ...        ...           ...\n","394        NaN        NaN        NaN  8.341200e-08\n","395        NaN        NaN        NaN  8.336500e-08\n","396        NaN        NaN        NaN  8.331700e-08\n","397        NaN        NaN        NaN  8.327000e-08\n","398        NaN        NaN        NaN  8.322300e-08\n","\n","[399 rows x 4 columns]\n","       RALM  REPM(LQH)  REPM(LSE)       RSQO\n","0    0.0000    0.00000     0.0000    0.00003\n","1    1.6555    0.16039     2.4332    0.46226\n","2    2.9921    0.40299     4.1318    0.89848\n","3    4.3687    1.08260     4.6859    1.36890\n","4    5.7326    1.13480     7.1841    1.85510\n","..      ...        ...        ...        ...\n","394     NaN        NaN        NaN  178.05860\n","395     NaN        NaN        NaN  178.52900\n","396     NaN        NaN        NaN  178.94240\n","397     NaN        NaN        NaN  179.39540\n","398     NaN        NaN        NaN  179.84310\n","\n","[399 rows x 4 columns]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"FFi3lSohWqft"},"source":["end"]}]}